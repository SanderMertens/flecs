{
    "id": "cpp_api",
    "type": "application",
    "value": {
        "author": "Sander Mertens",
        "description": "Test project for flecs",
        "public": false,
        "coverage": false,
        "language": "c++",
        "use": [
            "flecs"
        ]
    },
    "test": {
        "testsuites": [{
            "id": "Entity",
            "testcases": [
                "new",
                "new_named",
                "new_add",
                "new_add_2",
                "new_set",
                "new_set_2",
                "add",
                "add_2",
                "add_entity",
                "add_childof",
                "add_instanceof",
                "remove",
                "remove_2",
                "remove_entity",
                "remove_childof",
                "remove_instanceof",
                "set",
                "set_2",
                "replace",
                "get_generic",
                "get_mut_generic",
                "get_generic_w_id",
                "get_mut_generic_w_id",
                "add_role",
                "remove_role",
                "has_role",
                "trait_role",
                "equals",
                "has_childof",
                "has_instanceof",
                "has_instanceof_indirect",
                "null_string",
                "set_name",
                "change_name",
                "delete",
                "clear",
                "foce_owned",
                "force_owned_2",
                "force_owned_nested",
                "force_owned_type",
                "force_owned_type_w_trait",
                "tag_has_size_zero",
                "get_null_name",
                "get_parent",
                "get_parent_w_tag",
                "is_component_enabled",
                "is_enabled_component_enabled",
                "is_disabled_component_enabled"
            ]
        }, {
            "id": "Traits",
            "testcases": [
                "add_component_trait",
                "add_tag_trait",
                "add_tag_trait_to_tag",
                "remove_component_trait",
                "remove_tag_trait",
                "remove_tag_trait_to_tag",                
                "set_component_trait",
                "set_tag_trait",
                "system_1_trait_instance",
                "system_2_trait_instances",
                "override_trait",
                "override_tag_trait",
                "get_mut_trait",
                "get_mut_trait_existing",
                "get_mut_trait_tag",
                "get_mut_trait_tag_existing",
                "type_w_trait",
                "type_w_trait_tag",
                "type_w_trait_tags",
                "type_w_tag_trait",
                "override_trait_w_type",
                "override_trait_w_type_tag",
                "override_tag_trait_w_type"
            ]
        }, {
            "id": "Switch",
            "testcases": [
                "add_case",
                "get_case",
                "system_w_case",
                "system_w_switch",
                "add_case_w_type"
            ]
        }, {
            "id": "Paths",
            "testcases": [
                "name",
                "path_depth_1",
                "path_depth_2",
                "entity_lookup_name",
                "entity_lookup_depth_1",
                "entity_lookup_depth_2",
                "alias_component",
                "alias_scoped_component",
                "alias_scoped_component_w_name",
                "alias_entity",
                "alias_entity_by_name",
                "alias_entity_by_scoped_name"
            ]
        }, {
            "id": "Type",
            "testcases": [
                "add_2",
                "add_instanceof",
                "add_childof",
                "1_component",
                "2_component",
                "1_component_signature",
                "2_component_signature",
                "type_no_name"
            ]
        }, {
            "id": "System",
            "testcases": [
                "action",
                "action_const",
                "action_shared",
                "action_optional",
                "each",
                "each_const",
                "each_shared",
                "each_optional",
                "signature",
                "signature_const",
                "signature_shared",
                "signature_optional",
                "copy_name_on_create",
                "nested_system",
                "empty_signature",
                "action_tag",
                "iter_tag",
                "each_tag",
                "system_from_id",
                "set_interval"
            ]
        }, {
            "id": "Trigger",
            "testcases": [
                "on_add",
                "on_remove",
                "on_add_tag_action",
                "on_add_tag_iter",
                "on_add_tag_each"
            ]
        }, {
            "id": "Query",
            "testcases": [
                "action",
                "action_const",
                "action_shared",
                "action_optional",
                "each",
                "each_const",
                "each_shared",
                "each_optional",
                "signature",
                "signature_const",
                "signature_shared",
                "signature_optional",
                "subquery",
                "subquery_w_expr",
                "query_single_trait",
                "tag_w_each",
                "shared_tag_w_each"
            ]
        }, {
            "id": "ComponentLifecycle",
            "testcases": [
                "ctor_on_add",
                "dtor_on_remove",
                "copy_on_set",
                "copy_on_override",
                "non_pod_add",
                "non_pod_remove",
                "non_pod_set",
                "non_pod_override",
                "get_mut_new",
                "get_mut_existing",
                "pod_component",
                "relocatable_component",
                "implicit_component"
            ]
        }, {
            "id": "Refs",
            "testcases": [
                "get_ref",
                "ref_after_add",
                "ref_after_remove",
                "ref_after_set",
                "ref_before_set"
            ]
        }, {
            "id": "Module",
            "testcases": [
                "import",
                "lookup_from_scope",
                "nested_module"
            ]
        }, {
            "id": "ImplicitComponents",
            "testcases": [
                "add",
                "remove",
                "has",
                "set",
                "get",
                "add_trait",
                "remove_trait",
                "module",
                "system",
                "system_optional",
                "system_const",
                "query",
                "implicit_name",
                "reinit",
                "reinit_scoped",
                "reinit_w_lifecycle",
                "first_use_in_system"
            ]
        }, {
            "id": "Snapshot",
            "testcases": [
                "simple_snapshot",
                "snapshot_iter",
                "snapshot_iter_w_filter"
            ]
        }, {
            "id": "WorldFactory",
            "testcases": [
                "entity",
                "entity_w_name",
                "entity_w_id",
                "prefab",
                "prefab_w_name",
                "type",
                "type_w_name",
                "system",
                "system_w_name",
                "system_w_expr",
                "query",
                "query_w_expr",
                "snapshot",
                "module",
                "module_w_name"
            ]
        }, {
            "id": "World",
            "testcases": [
                "multi_world_empty",
                "multi_world_component",
                "multi_world_component_namespace",
                "type_id",
                "different_comp_same_name"
            ]
        }, {
            "id": "Singleton",
            "testcases": [
                "set_get_singleton",
                "get_mut_singleton",
                "modified_singleton",
                "patch_singleton",
                "remove_singleton",
                "has_singleton",
                "singleton_system"
            ]
        }]
    }
}
