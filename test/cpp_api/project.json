{
    "id": "cpp_api",
    "type": "application",
    "value": {
        "author": "Sander Mertens",
        "description": "Test project for flecs",
        "public": false,
        "coverage": false,
        "language": "c++",
        "use": [
            "flecs",
            "flecs.os_api.bake"
        ]
    },
    "test": {
        "testsuites": [{
            "id": "Entity",
            "testcases": [
                "new",
                "new_named",
                "new_named_from_scope",
                "new_nested_named_from_scope",
                "new_nested_named_from_nested_scope",
                "new_add",
                "new_add_2",
                "new_set",
                "new_set_2",
                "add",
                "add_2",
                "add_entity",
                "add_childof",
                "add_instanceof",
                "remove",
                "remove_2",
                "remove_entity",
                "remove_childof",
                "remove_instanceof",
                "set",
                "set_2",
                "replace",
                "get_generic",
                "get_mut_generic",
                "get_generic_w_id",
                "get_mut_generic_w_id",
                "add_role",
                "remove_role",
                "has_role",
                "pair_role",
                "equals",
                "has_childof",
                "has_instanceof",
                "has_instanceof_indirect",
                "null_string",
                "set_name",
                "change_name",
                "delete",
                "clear",
                "foce_owned",
                "force_owned_2",
                "force_owned_nested",
                "force_owned_type",
                "force_owned_type_w_pair",
                "tag_has_size_zero",
                "get_null_name",
                "get_parent",
                "get_parent_w_tag",
                "is_component_enabled",
                "is_enabled_component_enabled",
                "is_disabled_component_enabled",
                "get_type",
                "get_nonempty_type",
                "set_no_copy",
                "set_copy",
                "add_owned",
                "set_owned",
                "implicit_name_to_char",
                "implicit_path_to_char",
                "implicit_type_str_to_char",
                "entity_to_entity_view",
                "entity_view_to_entity_world",
                "entity_view_to_entity_stage",
                "create_entity_view_from_stage",
                "set_template"
            ]
        }, {
            "id": "Pairs",
            "testcases": [
                "add_component_pair",
                "add_tag_pair",
                "add_tag_pair_to_tag",
                "remove_component_pair",
                "remove_tag_pair",
                "remove_tag_pair_to_tag",                
                "set_component_pair",
                "set_tag_pair",
                "system_1_pair_instance",
                "system_2_pair_instances",
                "override_pair",
                "override_tag_pair",
                "get_mut_pair",
                "get_mut_pair_existing",
                "get_mut_pair_tag",
                "get_mut_pair_tag_existing",
                "type_w_pair",
                "type_w_pair_tag",
                "type_w_pair_tags",
                "type_w_tag_pair",
                "override_pair_w_type",
                "override_pair_w_type_tag",
                "override_tag_pair_w_type",
                "get_relation_from_id",
                "get_object_from_id",
                "get_recycled_relation_from_id",
                "get_recycled_object_from_id",
                "each",
                "each_pair",
                "each_pair_by_type",
                "each_pair_w_childof",
                "each_pair_w_recycled_rel",
                "each_pair_w_recycled_obj"
            ]
        }, {
            "id": "Switch",
            "testcases": [
                "add_case",
                "get_case",
                "system_w_case",
                "system_w_switch",
                "add_case_w_type"
            ]
        }, {
            "id": "Paths",
            "testcases": [
                "name",
                "path_depth_1",
                "path_depth_2",
                "entity_lookup_name",
                "entity_lookup_depth_1",
                "entity_lookup_depth_2",
                "alias_component",
                "alias_scoped_component",
                "alias_scoped_component_w_name",
                "alias_entity",
                "alias_entity_by_name",
                "alias_entity_by_scoped_name"
            ]
        }, {
            "id": "Type",
            "testcases": [
                "add_2",
                "add_instanceof",
                "add_childof",
                "1_component",
                "2_component",
                "1_component_signature",
                "2_component_signature",
                "type_no_name",
                "null_args"
            ]
        }, {
            "id": "System",
            "testcases": [
                "action",
                "action_const",
                "action_shared",
                "action_optional",
                "each",
                "each_const",
                "each_shared",
                "each_optional",
                "signature",
                "signature_const",
                "signature_shared",
                "signature_optional",
                "copy_name_on_create",
                "nested_system",
                "empty_signature",
                "action_tag",
                "iter_tag",
                "each_tag",
                "system_from_id",
                "set_interval",
                "order_by_type",
                "order_by_id",
                "order_by_type_after_create",
                "order_by_id_after_create",
                "get_query",
                "add_from_each",
                "delete_from_each",
                "add_from_each_world_handle",
                "new_from_each",
                "add_from_iter",
                "delete_from_iter",
                "add_from_iter_world_handle",
                "new_from_iter",
                "each_w_mut_children_it",
                "readonly_children_iter",
                "rate_filter",
                "update_rate_filter",
                "default_ctor"
            ]
        }, {
            "id": "Trigger",
            "testcases": [
                "on_add",
                "on_remove",
                "on_add_tag_action",
                "on_add_tag_iter",
                "on_add_tag_each"
            ]
        }, {
            "id": "Query",
            "testcases": [
                "action",
                "action_const",
                "action_shared",
                "action_optional",
                "each",
                "each_const",
                "each_shared",
                "each_optional",
                "signature",
                "signature_const",
                "signature_shared",
                "signature_optional",
                "subquery",
                "subquery_w_expr",
                "query_single_pair",
                "tag_w_each",
                "shared_tag_w_each",
                "sort_by",
                "changed",
                "orphaned",
                "default_ctor",
                "expr_w_template",
                "query_type_w_template",
                "compare_term_id"
            ]
        }, {
            "id": "QueryBuilder",
            "testcases": [
                "builder_assign_same_type",
                "builder_assign_from_empty",
                "builder_assign_to_empty",
                "builder_build",
                "builder_build_to_auto",
                "builder_build_n_statements",
                "1_type",
                "add_1_type",
                "add_2_types",
                "add_1_type_w_1_type",
                "add_2_types_w_1_type",
                "add_pair",
                "add_not",
                "add_or",
                "add_optional",
                "ptr_type",
                "const_type",
                "string_term",
                "singleton_term",
                "isa_superset_term",
                "isa_self_superset_term",
                "childof_superset_term",
                "childof_self_superset_term",
                "isa_superset_term_w_each",
                "isa_self_superset_term_w_each",
                "childof_superset_term_w_each",
                "childof_self_superset_term_w_each",
                "isa_superset_shortcut",
                "isa_superset_shortcut_w_self",
                "childof_superset_shortcut",
                "childof_superset_shortcut_w_self",
                "isa_supetset_max_depth_1",
                "isa_supetset_max_depth_2",
                "isa_supetset_min_depth_2",
                "isa_supetset_min_depth_2_max_depth_3",
                "role",
                "relation",
                "relation_w_object_wildcard",
                "relation_w_predicate_wildcard",
                "add_pair_w_rel_type",
                "template_term",
                "explicit_subject_w_id",
                "explicit_subject_w_type",
                "explicit_object_w_id",
                "explicit_object_w_type",
                "explicit_term",
                "explicit_term_w_type",
                "explicit_term_w_pair_type",
                "explicit_term_w_id",
                "explicit_term_w_pair_id"
            ]         
        }, {
            "id": "SystemBuilder",
            "testcases": [
                "builder_assign_same_type",
                "builder_assign_from_empty",
                "builder_build_to_auto",
                "builder_build_n_statements",
                "1_type",
                "add_1_type",
                "add_2_types",
                "add_1_type_w_1_type",
                "add_2_types_w_1_type",
                "add_pair",
                "add_not",
                "add_or",
                "add_optional",
                "ptr_type",
                "const_type",
                "string_term",
                "singleton_term"
            ]         
        }, {
            "id": "ComponentLifecycle",
            "testcases": [
                "ctor_on_add",
                "dtor_on_remove",
                "move_on_add",
                "move_on_remove",
                "copy_on_set",
                "copy_on_override",
                "non_pod_add",
                "non_pod_remove",
                "non_pod_set",
                "non_pod_override",
                "get_mut_new",
                "get_mut_existing",
                "pod_component",
                "relocatable_component",
                "implicit_component",
                "implicit_after_query"
            ]
        }, {
            "id": "Refs",
            "testcases": [
                "get_ref",
                "ref_after_add",
                "ref_after_remove",
                "ref_after_set",
                "ref_before_set"
            ]
        }, {
            "id": "Module",
            "testcases": [
                "import",
                "lookup_from_scope",
                "nested_module",
                "nested_type_module",
                "module_type_w_explicit_name",
                "component_redefinition_outside_module",
                "module_tag_on_namespace",
                "dtor_on_fini"
            ]
        }, {
            "id": "ImplicitComponents",
            "testcases": [
                "add",
                "remove",
                "has",
                "set",
                "get",
                "add_pair",
                "remove_pair",
                "module",
                "system",
                "system_optional",
                "system_const",
                "query",
                "implicit_name",
                "reinit",
                "reinit_scoped",
                "reinit_w_lifecycle",
                "first_use_in_system",
                "first_use_tag_in_system",
                "use_const",
                "use_const_w_stage",
                "use_const_w_threads",
                "implicit_base",
                "implicit_const",
                "implicit_ref",
                "implicit_ptr",
                "implicit_const_ref"
            ]
        }, {
            "id": "Snapshot",
            "testcases": [
                "simple_snapshot",
                "snapshot_iter",
                "snapshot_iter_w_filter"
            ]
        }, {
            "id": "WorldFactory",
            "testcases": [
                "entity",
                "entity_w_name",
                "entity_w_id",
                "prefab",
                "prefab_w_name",
                "type",
                "type_w_name",
                "system",
                "system_w_name",
                "system_w_expr",
                "query",
                "query_w_expr",
                "snapshot",
                "module",
                "module_w_name"
            ]
        }, {
            "id": "World",
            "testcases": [
                "multi_world_empty",
                "multi_world_component",
                "multi_world_component_namespace",
                "multi_world_module",
                "type_id",
                "different_comp_same_name",
                "reregister_after_reset",
                "reregister_after_reset_w_namespace",
                "reregister_namespace",
                "implicit_reregister_after_reset",
                "reregister_after_reset_different_name",
                "reimport",
                "reimport_module_after_reset",
                "reimport_module_new_world",
                "reimport_namespaced_module",
                "c_interop_module",
                "c_interop_after_reset",
                "implicit_register_w_new_world",
                "count",
                "staged_count",
                "async_stage_add"
            ]
        }, {
            "id": "Singleton",
            "testcases": [
                "set_get_singleton",
                "get_mut_singleton",
                "modified_singleton",
                "patch_singleton",
                "remove_singleton",
                "has_singleton",
                "singleton_system",
                "get_singleton",
                "type_id_from_world"
            ]
        }]
    }
}
