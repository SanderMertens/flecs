{
    "id": "core",
    "type": "application",
    "value": {
        "author": "Sander Mertens",
        "description": "Flecs core tests",
        "public": false,
        "coverage": false,
        "use": [
            "flecs"
        ]
    },
    "test": {
        "testsuites": [{
            "id": "Id",
            "testcases": [
                "0_is_wildcard",
                "wildcard_is_wildcard",
                "any_is_wildcard",
                "entity_is_wildcard",
                "pair_is_wildcard",
                "pair_w_rel_wildcard_is_wildcard",
                "pair_w_obj_wildcard_is_wildcard",
                "pair_w_wildcard_wildcard_is_wildcard",
                "pair_w_rel_any_is_wildcard",
                "pair_w_obj_any_is_wildcard",
                "pair_w_any_any_is_wildcard",
                "pair_w_override_is_wildcard",
                "pair_w_toggle_is_wildcard",
                "tag_id_is_tag",
                "component_id_is_tag",
                "pair_id_is_tag",
                "pair_id_w_rel_component_is_tag",
                "pair_id_w_obj_component_is_tag",
                "pair_id_w_rel_component_obj_wildcard_is_tag",
                "pair_id_w_obj_wildcard_is_tag",
                "pair_id_w_tag_property_w_obj_component_is_tag",
                "pair_id_w_tag_property_w_obj_wildcard_is_tag",
                "pair_w_rel_wildcard_is_tag",
                "pair_w_obj_wildcard_is_tag",
                "pair_w_rel_tag_obj_wildcard_is_tag",
                "pair_w_wildcard_wildcard_is_tag",
                "pair_w_rel_any_is_tag",
                "pair_w_obj_any_is_tag",
                "pair_w_rel_tag_obj_any_is_tag",
                "pair_w_any_any_is_tag",
                "id_w_override_is_tag",
                "id_w_toggle_is_tag",
                "pair_id_override_is_tag",
                "pair_id_toggle_is_tag",
                "make_pair",
                "make_pair_of_pair",
                "make_pair_of_pair_tgt",
                "0_entity",
                "entity_from_str",
                "unresolved_entity_from_str",
                "scoped_entity_from_str",
                "template_entity_from_str",
                "pair_from_str",
                "unresolved_pair_from_str",
                "wildcard_pair_from_str",
                "any_pair_from_str",
                "invalid_pair"
            ]
        }, {
            "id": "Entity",
            "testcases": [
                "init_id",
                "init_id_name",
                "init_id_path",
                "init_id_add_1_comp",
                "init_id_add_2_comp",
                "init_id_w_scope",
                "init_id_name_w_scope",
                "init_id_path_w_scope",
                "init_id_fullpath_w_scope",
                "init_id_fullpath_w_scope_existing",
                "init_id_name_1_comp",
                "init_id_name_2_comp",
                "init_id_name_2_comp_w_scope",
                "id_add_1_comp",
                "id_add_2_comp",
                "init_id_path_w_sep",
                "find_id_name",
                "find_w_existing_id_name",
                "find_id_name_w_scope",
                "find_id_path",
                "find_id_path_w_scope",
                "find_id_name_match",
                "find_id_name_match_w_scope",
                "find_id_path_match",
                "find_id_path_match_w_scope",
                "find_id_name_mismatch",
                "find_id_name_mismatch_w_scope",
                "find_id_path_mismatch",
                "find_id_path_mismatch_w_scope",
                "find_id_add_1_comp",
                "find_id_add_2_comp",
                "init_w_scope_name",
                "init_w_core_name",
                "init_w_with",
                "init_w_with_w_name",
                "init_w_with_w_scope",
                "init_w_with_w_name_scope",
                "is_valid",
                "is_recycled_valid",
                "is_0_valid",
                "is_junk_valid",
                "is_not_alive_valid",
                "is_nonzero_gen_valid",
                "init_w_name_deferred",
                "init_w_name_twice_deferred",
                "init_w_nested_name_twice_deferred",
                "init_w_scope_name_twice_deferred",
                "init_w_childof_name_twice_deferred",
                "init_w_childof_nested_name_twice_deferred",
                "init_w_name_staged",
                "record_find_for_empty",
                "record_find",
                "record_find_from_stage",
                "make_alive_zero_gen",
                "make_alive_nonzero_gen",
                "make_alive_zero_gen_exists",
                "make_alive_nonzero_gen_exists",
                "make_alive_zero_gen_exists_alive",
                "make_alive_nonzero_gen_exists_alive",
                "set_scope_w_entity_init_from_stage",
                "entity_init_w_scope_twice",
                "entity_init_w_childof_twice",
                "entity_init_w_childof_nested_name_twice",
                "entity_init_w_childof_and_scope",
                "entity_init_w_childof_and_scope_and_scoped_name",
                "entity_init_w_childof_and_no_name",
                "deferred_entity_init_w_childof_and_scope",
                "deferred_entity_init_w_childof_and_scope_and_scoped_name",
                "deferred_entity_init_w_childof_and_no_name",
                "entity_init_w_empty_string_name",
                "entity_init_w_empty_string_symbol",
                "set_name_w_0_twice",
                "new_entity_twice",
                "new_entity_scoped_twice",
                "defer_component_init",
                "defer_component_init_w_symbol",
                "defer_entity_init_w_symbol",
                "staged_set_name_n_stages",
                "staged_set_symbol_n_stages",
                "entity_init_w_add_childof_no_name",
                "entity_w_short_notation",
                "override_inherited_symbol",
                "use_low_id_for_component",
                "get_depth",
                "get_depth_non_acyclic",
                "get_depth_empty",
                "get_depth_2_paths",
                "entity_init_w_empty_sep",
                "entity_init_w_empty_sep_from_scope",
                "entity_init_w_empty_sep_w_prefix",
                "set_name_w_same_ptr",
                "set_name_w_overlapping_ptr",
                "defer_set_name_w_overlapping_ptr",
                "make_alive_from_stage",
                "make_alive_after_deleted_1_entity",
                "make_alive_after_deleted_2_entities",
                "defer_entity_init_w_set_name_w_add_childof",
                "entity_w_digit_name",
                "entity_w_existing_digit_name",
                "entity_from_digit",
                "entity_from_existing_digit",
                "entity_from_digit_path",
                "entity_from_existing_digit_path",
                "entity_from_digit_0_path",
                "entity_from_conflicting_digit",
                "set_version_on_nonempty_entity",
                "set_version_while_deferred",
                "commit_w_on_add",
                "commit_w_on_remove",
                "commit_w_cmd_in_observer",
                "entity_init_existing_no_sep",
                "entity_init_w_set_1_comp",
                "entity_init_w_set_2_comp",
                "entity_init_w_set_1_comp_1_tag",
                "entity_init_w_set_2_comp_2_tag",
                "entity_init_w_set_1_comp_w_name",
                "entity_init_w_set_1_comp_existing",
                "entity_init_w_set_1_comp_existing_empty",
                "entity_init_w_set_1_comp_1_tag_w_set",
                "entity_init_w_set_w_hook",
                "entity_init_w_set_w_observer",
                "entity_init_w_set_1_comp_defer",
                "entity_init_w_set_2_comp_defer",
                "entity_init_w_set_1_comp_1_tag_defer",
                "entity_init_w_set_2_comp_2_tag_defer",
                "entity_init_w_set_1_comp_w_name_defer",
                "entity_init_w_set_1_comp_existing_defer",
                "entity_init_w_set_1_comp_existing_empty_defer",
                "entity_init_w_set_1_comp_1_tag_w_set_defer",
                "insert_1_comp",
                "insert_2_comp",
                "insert_1_comp_1_tag",
                "entity_w_parent",
                "entity_w_parent_w_name",
                "entity_w_parent_w_add",
                "entity_w_parent_w_add_w_parent",
                "entity_w_parent_w_set",
                "entity_w_parent_w_set_w_parent"
            ]
        }, {
            "id": "Each",
            "testcases": [
                "each_tag",
                "each_component",
                "each_pair",
                "each_pair_rel_wildcard",
                "each_pair_tgt_wildcard"
            ]
        }, {
            "id": "Iter",
            "testcases": [
                "page_iter_0_0",
                "page_iter_1_0",
                "page_iter_0_1",
                "page_iter_n_0",
                "page_iter_0_n",
                "page_iter_m_n",
                "page_iter_skip_1_table",
                "page_iter_skip_2_tables",
                "worker_iter_1",
                "worker_iter_2",
                "worker_iter_3",
                "worker_iter_4",
                "paged_iter_w_shared_comp",
                "worker_iter_w_shared_comp",
                "paged_iter_w_task_query",
                "worker_iter_w_task_query",
                "worker_iter_w_singleton",
                "worker_iter_w_singleton_instanced",
                "worker_iter_w_singleton_component_instanced",
                "paged_iter_w_singleton",
                "paged_iter_w_singleton_instanced",
                "paged_iter_w_singleton_component_instanced",
                "page_iter_w_offset_skip_1_archetype",
                "page_iter_w_offset_skip_1_archetype_plus_one",
                "page_iter_w_offset_skip_2_archetypes",
                "page_iter_w_limit_skip_1_archetype",
                "page_iter_w_limit_skip_1_archetype_minus_one",
                "page_iter_w_limit_skip_2_archetypes",
                "page_iter_w_offset_1_limit_max",
                "page_iter_w_offset_1_limit_minus_1",
                "page_iter_w_offset_2_type_limit_max",
                "page_iter_w_offset_2_type_limit_minus_1",
                "page_iter_w_limit_1_all_offsets",
                "page_iter_w_offset_out_of_bounds",
                "page_iter_w_limit_out_of_bounds",
                "page_iter_comb_10_entities_1_type",
                "page_iter_comb_10_entities_2_types",
                "count",
                "iter_restore_stack_iter",
                "interleaved_iter",
                "get_first",
                "page_iter_w_only_tag",
                "worker_iter_w_only_tag",
                "page_iter_w_inout_none",
                "worker_iter_w_inout_none",
                "page_iter_w_ctx",
                "page_iter_w_binding_ctx",
                "worker_iter_w_ctx",
                "worker_iter_w_binding_ctx",
                "column_index_owned",
                "column_index_shared",
                "column_index_not",
                "page_iter_w_fini",
                "worker_iter_w_fini",
                "rule_page_iter_w_fini",
                "rule_worker_iter_w_fini",
                "to_str_before_next",
                "to_str"
            ]
        }, {
            "id": "Search",
            "testcases": [
                "search",
                "search_wildcard",
                "search_wildcard_w_offset",
                "search_relation_wildcard_w_offset",
                "search_pair_w_any_rel",
                "search_pair_w_any_obj",
                "search_follow_relation_lvl_0",
                "search_follow_relation_lvl_1",
                "search_follow_relation_lvl_2",
                "search_follow_relation_lvl_3",
                "search_first_lvl_0",
                "search_first_lvl_1",
                "search_first_lvl_2",
                "search_first_lvl_3",
                "search_relation_wildcard",
                "search_relation_at_offset",
                "search_relation_inherit_from_parent",
                "search_relation_dont_inherit",
                "search_relation_dont_inherit_from_parent",
                "search_relation_exclusive"
            ]
        }, {
            "id": "Event",
            "testcases": [
                "table_1_id_w_trigger",
                "table_2_ids_w_trigger",
                "table_1_id_w_observer",
                "table_2_ids_w_observer",
                "emit_event_for_empty_table",
                "emit_table_event",
                "emit_staged_from_world",
                "emit_staged_from_stage",
                "emit_staged_from_world_observer",
                "emit_staged_from_stage_observer",
                "emit_for_entity",
                "emit_custom_for_any",
                "emit_custom_implicit_any",
                "emit_custom_empty_type",
                "emit_w_param",
                "emit_w_param_multi_observer",
                "emit_w_const_param",
                "emit_nested",
                "enqueue_event_1_id",
                "enqueue_event_2_ids",
                "enqueue_event_w_data",
                "enqueue_event_w_data_move",
                "enqueue_event_w_data_copy",
                "enqueue_event_w_const_data_no_copy",
                "enqueue_event_not_alive",
                "enqueue_event_not_alive_w_data_move",
                "enqueue_event_not_alive_w_data_copy",
                "enqueue_event_not_alive_after_delete_during_merge",
                "enqueue_event_not_alive_w_data_move_after_delete_during_merge",
                "enqueue_event_not_alive_w_data_copy_after_delete_during_merge",
                "enqueue_event_not_deferred",
                "enqueue_event_not_deferred_to_async",
                "enqueue_custom_implicit_any",
                "enqueue_custom_after_large_cmd",
                "enqueue_on_readonly_world"
            ]
        }, {
            "id": "New",
            "setup": true,
            "testcases": [
                "empty",
                "component",
                "tag",
                "redefine_component",
                "recycle_id_empty",
                "recycle_id_w_entity",
                "recycle_empty_staged_delete",
                "recycle_staged_delete",
                "new_id",
                "new_component_id",
                "new_hi_component_id",
                "new_component_id_skip_used",
                "new_component_id_skip_to_hi_id",
                "new_w_entity_0",
                "create_w_explicit_id_2_worlds",
                "new_w_id_0_w_with",
                "new_w_id_w_with",
                "new_w_type_w_with",
                "new_w_id_w_with_w_scope",
                "new_w_type_w_with_w_scope",
                "new_w_id_w_with_defer",
                "new_w_id_w_with_defer_w_scope",
                "new_w_type_w_with_defer",
                "new_w_type_w_with_defer_w_scope",
                "new_w_table",
                "new_w_null_table",
                "new_w_table_component",
                "new_w_table_sparse_component",
                "new_w_table_override"
            ]
        }, {
            "id": "New_w_Count",
            "testcases": [
                "empty",
                "component",
                "tag",
                "bulk_init_empty",
                "bulk_init_empty_w_entities",
                "bulk_init_1_tag",
                "bulk_init_1_tag_w_entities",
                "bulk_init_2_tags",
                "bulk_init_1_component",
                "bulk_init_2_components",
                "bulk_init_1_component_w_value",
                "bulk_init_2_components_w_value",
                "bulk_init_2_components_tag_w_value",
                "add_after_bulk",
                "add_after_bulk_w_component",
                "add_after_bulk_w_ctor",
                "recycle_1_of_2",
                "recycle_1_of_3",
                "recycle_2_of_3",
                "bulk_init_w_table"
            ]
        }, {
            "id": "Add",
            "testcases": [
                "zero",
                "component",
                "component_again",
                "2_components",
                "2_components_again",
                "2_components_overlap",
                "component_to_nonempty",
                "component_to_nonempty_again",
                "component_to_nonempty_overlap",
                "tag",
                "add_entity",
                "remove_entity",
                "add_0_entity",
                "remove_0_entity",
                "invalid_add_wildcard",
                "invalid_add_pair_w_wildcard",
                "invalid_add_pair_w_wildcard_rel",
                "invalid_add_pair_w_wildcard_obj",
                "invalid_add_any",
                "invalid_add_pair_w_any",
                "invalid_add_pair_w_any_rel",
                "invalid_add_pair_w_any_obj",
                "invalid_pair_w_0",
                "invalid_pair_w_0_rel",
                "invalid_pair_w_0_obj",
                "add_random_id"
            ]
        }, {
            "id": "Remove",
            "testcases": [
                "zero",
                "1_of_1",
                "1_of_2",
                "2_of_2",
                "2_of_3",
                "1_of_1_again",
                "2_again",
                "2_overlap",
                "1_from_empty",
                "not_added"
            ]
        }, {
            "id": "GlobalComponentIds",
            "testcases": [
                "declare",
                "declare_w_entity",
                "declare_2_world",
                "declare_tag",
                "declare_tag_w_entity",
                "declare_entity",
                "reuse_300_component_ids"
            ]
        }, {
            "id": "Sparse",
            "testcases": [
                "has",
                "owns",
                "get",
                "get_mut",
                "ensure",
                "emplace",
                "set",
                "modified_no_on_set",
                "insert_1",
                "insert_2",
                "get_ref",
                "update_ref",
                "get_recycled",
                "get_mut_recycled",
                "ensure_recycled",
                "emplace_recycled",
                "set_recycled",
                "get_ref_recycled",
                "test_stable_ptr",
                "has_after_remove",
                "has_after_clear",
                "get_after_remove",
                "get_mut_after_remove",
                "sparse_w_hole",
                "record_get",
                "has_inherited",
                "owns_inherited",
                "get_inherited",
                "get_mut_inherited",
                "ensure_inherited",
                "emplace_inherited",
                "override_component",
                "delete_w_override_component",
                "delete_w_override_on_remove_isa", 
                "ctor_after_emplace",
                "ctor_dtor_after_remove",
                "ctor_dtor_after_clear",
                "ctor_dtor_after_delete",
                "ctor_dtor_after_fini",
                "on_add_remove_after_remove",
                "on_add_remove_after_clear",
                "on_add_remove_after_delete",
                "on_add_remove_after_fini",
                "on_set_after_set",
                "on_set_after_modified",
                "on_set_at_offset",
                "on_add_observer",
                "on_set_observer_set",
                "on_set_observer_modified",
                "on_set_observer_insert",
                "on_remove_observer_remove",
                "on_remove_observer_clear",
                "on_remove_observer_delete",
                "on_remove_observer_fini",
                "on_set_after_remove_override",
                "on_add_observer_2_terms",
                "on_set_observer_2_terms",
                "on_remove_observer_2_terms",
                "sparse_relationship",
                "defer_ensure",
                "defer_ensure_w_modified",
                "defer_ensure_modified",
                "defer_emplace",
                "defer_emplace_w_modified",
                "defer_set",
                "defer_ensure_existing",
                "defer_ensure_existing_twice",
                "defer_ensure_w_modified_existing",
                "defer_ensure_modified_existing",
                "defer_emplace_existing",
                "defer_emplace_w_modified_existing",
                "defer_set_existing",
                "defer_batched_ensure",
                "defer_batched_ensure_w_modified",
                "defer_batched_ensure_modified",
                "defer_batched_emplace",
                "defer_batched_emplace_w_modified",
                "defer_batched_set",
                "defer_batched_ensure_existing",
                "defer_batched_ensure_existing_twice",
                "defer_batched_ensure_w_modified_existing",
                "defer_batched_ensure_modified_existing",
                "defer_batched_emplace_existing",
                "defer_batched_emplace_w_modified_existing",
                "defer_batched_set_existing",
                "defer_batched_set_remove",
                "defer_batched_set_remove_existing"
            ]
        }, {
            "id": "Union",
            "testcases": [
                "add",
                "add_twice",
                "add_replace",
                "add_remove",
                "add_remove_recycled",
                "add_remove_add",
                "get_target_none",
                "get_target",
                "get_recycled_target",
                "get_target_after_replace",
                "get_target_after_remove",
                "has_wildcard",
                "has_any",
                "add_remove_2_tgts",
                "add_remove_2_tgts_join",
                "add_remove_3_tgts",
                "add_remove_3_tgts_join",
                "remove_w_union_tgt",
                "get_non_union_tgt_from_table_w_union",
                "has_non_union_from_table_w_union",
                "get_case_no_switch",
                "get_case_set",
                "get_case_change",
                "remove_case",
                "remove_last",
                "delete_first",
                "delete_last",
                "delete_first_last",
                "3_entities_same_case",
                "2_entities_1_change_case",
                "3_entities_change_case",
                "add_case_in_stage",
                "change_case_in_stage",
                "change_one_case_in_stage",
                "remove_switch_in_stage",
                "switch_no_match_for_case",
                "empty_entity_has_case",
                "zero_entity_has_case",
                "add_to_entity_w_switch",
                "add_pair_to_entity_w_switch",
                "recycled_tags",
                "same_table_after_change",
                "add_2",
                "add_2_reverse",
                "add_switch_to_prefab_instance",
                "get_case_w_generation",
                "get_case_w_generation_not_alive",
                "defer_add_union_relationship",
                "defer_add_existing_union_relationship",
                "defer_add_union_relationship_2_ops",
                "defer_add_existing_union_relationship_2_ops"
            ]
        }, {
            "id": "Hierarchies",
            "setup": true,
            "testcases": [
                "empty_scope",
                "get_parent",
                "get_parent_from_nested",
                "get_parent_from_nested_2",
                "get_object_from_0",
                "tree_iter_empty",
                "tree_iter_1_table",
                "tree_iter_2_tables",
                "path_depth_0",
                "path_depth_1",
                "path_depth_2",
                "path_core",
                "path_core_w_prefix",
                "path_core_w_empty_prefix",
                "path_this_w_empty_prefix",
                "path_wildcard_w_empty_prefix",
                "path_any_w_empty_prefix",
                "rel_path_from_root",
                "rel_path_from_self",
                "rel_path_depth_1",
                "rel_path_depth_2",
                "rel_path_no_match",
                "path_custom_sep",
                "path_custom_prefix",
                "path_prefix_rel_match",
                "path_prefix_rel_no_match",
                "fullpath_for_core",
                "path_w_number",
                "path_w_entity_id",
                "lookup_depth_0",
                "lookup_depth_1",
                "lookup_depth_2",
                "lookup_rel_0",
                "lookup_rel_1",
                "lookup_rel_2",
                "lookup_custom_sep",
                "lookup_custom_prefix",
                "lookup_custom_prefix_from_root",
                "lookup_self",
                "lookup_in_parent_from_scope",
                "lookup_in_root_from_scope",
                "lookup_number",
                "lookup_entity_id",
                "delete_children",
                "scope_set",
                "scope_set_again",
                "scope_set_w_lookup",
                "scope_component",
                "scope_component_no_macro",
                "new_from_path_depth_0",
                "new_from_path_depth_1",
                "new_from_path_depth_2",
                "new_from_path_existing_depth_0",
                "new_from_path_existing_depth_1",
                "new_from_path_existing_depth_2",
                "add_path_depth_0",
                "add_path_depth_1",
                "add_path_depth_2",
                "add_path_existing_depth_0",
                "add_path_existing_depth_1",
                "add_path_existing_depth_2",
                "add_path_from_scope",
                "add_path_from_scope_new_entity",
                "add_root_path_to_child",
                "add_parent_path_from_root_to_child",
                "delete_child",
                "delete_2_children",
                "delete_2_children_different_type",
                "delete_tree_2_levels",
                "delete_tree_3_levels",
                "delete_tree_empty_table",
                "delete_tree_recreate",
                "delete_tree_w_onremove",
                "delete_tree_w_dtor",
                "get_child_count",
                "get_child_count_2_tables",
                "get_child_count_no_children",
                "scope_iter_after_delete_tree",
                "add_child_after_delete_tree",
                "add_child_to_recycled_parent",
                "get_type_after_recycled_parent_add",
                "long_name_depth_0",
                "long_name_depth_1",
                "long_name_depth_2",
                "ensure_1_parent_after_adding_2",
                "ensure_child_alive_after_deleting_prev_parent",
                "lookup_after_root_to_parent_move",
                "lookup_after_parent_to_root_move",
                "lookup_after_parent_to_parent_move",
                "lookup_after_clear_from_root",
                "lookup_after_clear_from_parent",
                "lookup_after_delete_from_root",
                "lookup_after_delete_from_parent",
                "defer_batch_remove_name_w_add_childof",
                "defer_batch_remove_childof_w_add_name"
            ]
        }, {
            "id": "Has",
            "testcases": [
                "zero",
                "1_of_0",
                "1_of_1",
                "1_of_2",
                "1_of_empty",
                "has_in_progress",
                "has_of_zero",
                "owns",
                "owns_wildcard",
                "owns_wildcard_pair",
                "has_entity",
                "has_entity_0",
                "has_entity_0_component",
                "has_entity_owned",
                "has_entity_owned_0",
                "has_entity_owned_0_component",
                "has_wildcard",
                "has_wildcard_pair"
            ]
        }, {
            "id": "Count",
            "testcases": [
                "count_empty",
                "count_w_entity_0",
                "count_1_component",
                "count_disabled",
                "count_prefab"
            ]
        }, {
            "id": "Get_component",
            "setup": true,
            "testcases": [
                "get_empty",
                "get_1_from_1",
                "get_1_from_2",
                "get_2_from_2",
                "get_2_from_3",
                "get_1_from_2_in_progress_from_main_stage",
                "get_1_from_2_add_in_progress",
                "get_both_from_2_add_in_progress",
                "get_both_from_2_add_remove_in_progress",
                "get_childof_component",
                "ensure_equal_get",
                "get_tag",
                "get_pair_tag",
                "get_wildcard"
            ]
        }, {
            "id": "Reference",
            "setup": true,
            "testcases": [
                "get_ref",
                "get_ref_after_add",
                "get_ref_after_remove",
                "get_ref_after_delete",
                "get_ref_after_realloc",
                "get_ref_after_realloc_w_lifecycle",
                "get_ref_staged",
                "get_ref_after_new_in_stage",
                "get_ref_monitored",
                "get_ref_w_low_id_tag",
                "get_ref_w_low_id_tag_after_add",
                "get_nonexisting",
                "aba_table"
            ]
        }, {
            "id": "Delete",
            "setup": true,
            "testcases": [
                "delete_1",
                "delete_1_again",
                "delete_recycled_tag_again",
                "delete_empty",
                "delete_nonexist",
                "delete_1st_of_3",
                "delete_2nd_of_3",
                "delete_3rd_of_3",
                "delete_2_of_3",
                "delete_3_of_3",
                "delete_w_on_remove",
                "clear_1_component",
                "clear_2_components",
                "alive_after_delete",
                "alive_after_clear",
                "alive_after_staged_delete",
                "alive_while_staged",
                "alive_while_staged_w_delete",
                "alive_while_staged_w_delete_recycled_id",
                "alive_after_recycle",
                "delete_recycled",
                "get_alive_for_alive",
                "get_alive_for_recycled",
                "get_alive_for_not_alive",
                "get_alive_w_generation_for_recycled_alive",
                "get_alive_w_generation_for_recycled_not_alive",
                "get_alive_for_0",
                "get_alive_for_nonexistent",
                "move_w_dtor_move",
                "move_w_dtor_no_move",
                "move_w_no_dtor_move",
                "wrap_generation_count"
            ]
        }, {
            "id": "OnDelete",
            "testcases": [
                "flags",
                "id_default",
                "id_remove",
                "id_delete",
                "relation_default",
                "relation_remove",
                "relation_delete",
                "object_default",
                "object_remove",
                "object_delete",
                "id_throw",
                "relation_throw",
                "object_throw",
                "object_mixed",
                "id_remove_no_instances",
                "id_delete_no_instances",
                "id_throw_no_instances",
                "cyclic_self",
                "nonempty_cyclic_self",
                "cyclic_id_default",
                "cyclic_id_remove",
                "cyclic_id_remove_both",
                "cyclic_id_delete",
                "cyclic_id_delete_both",
                "cyclic_relation_default",
                "cyclic_relation_remove",
                "cyclic_relation_remove_both",
                "cyclic_relation_delete",
                "cyclic_relation_delete_both",
                "cyclic_object_default",
                "cyclic_object_remove",
                "cyclic_object_delete",
                "cyclic_overlapping_table",
                "cyclic_overlapping_new_tables",
                "cyclic_object_mixed",
                "cyclic_storage_table",
                "cyclic_storage_table_2",
                "cyclic_storage_table_3",
                "cyclic_set_empty",
                "2_acyclic_relations_w_cycle",
                "remove_2_comps",
                "remove_2_comps_to_existing_table",
                "delete_recursive",
                "component_throw",
                "remove_2_relations",
                "remove_object_w_2_relations",
                "remove_object_w_5_relations",
                "remove_object_w_50_relations",
                "remove_object_w_50_relations_3_tables",
                "remove_object_w_3_relations_interleaved",
                "remove_id_from_2_tables",
                "remove_relation_from_2_tables",
                "remove_object_from_2_tables",
                "remove_id_and_relation",
                "remove_id_and_relation_from_2_tables",
                "stresstest_many_objects",
                "stresstest_many_relations",
                "stresstest_many_objects_on_delete",
                "stresstest_many_relations_on_delete",
                "empty_table_w_on_remove",
                "delete_table_in_on_remove_during_fini",
                "delete_other_in_on_remove_during_fini",
                "remove_id_w_role",
                "remove_rel_w_override_pair",
                "remove_obj_w_override_pair",
                "remove_rel_w_override_pair_after_on_delete_target",
                "remove_rel_w_override_pair_2_ids",
                "remove_obj_w_override_pair_2_ids",
                "remove_obj_w_override_pair_3_ids",
                "remove_mixed_w_override_pair_3_ids",
                "merge_pair_component",
                "delete_with_tag",
                "delete_with_component",
                "delete_with_pair",
                "delete_with_object_wildcard",
                "delete_with_relation_wildcard",
                "delete_with_component_after_delete_cyclic_self",
                "delete_with_component_after_delete_cyclic",
                "delete_with_component_after_delete_cyclic_w_alive_moved",
                "delete_all_with_entity",
                "remove_childof_entity",
                "remove_childof_wildcard",
                "delete_child_of_delete_with",
                "deep_clean_64",
                "deep_clean_256",
                "id_w_disabled",
                "id_to_no_disabled",
                "remove_on_delete_action",
                "delete_with_w_relation",
                "delete_self_in_on_remove",
                "delete_nested_in_on_remove",
                "add_deleted_in_on_remove",
                "delete_tree_w_query",
                "fini_cleanup_order",
                "fini_cleanup_order_root_id_w_trait",
                "fini_cleanup_order_entity_after_singleton",
                "fini_cleanup_order_entity_after_component",
                "on_delete_parent_w_in_use_id_w_remove",
                "on_delete_parent_w_in_use_id_w_delete",
                "create_after_delete_with",
                "delete_with_inherited_tag",
                "delete_with_inherited_tag_w_query",
                "delete_with_inherited_tag_w_observer",
                "delete_symmetric_relation",
                "delete_observed_symmetric_relation",
                "nested_delete_with",
                "deferred_delete_with_after_create_named",
                "deferred_delete_with_childof_after_create_named",
                "match_marked_for_deletion",
                "delete_w_low_rel_mixed_cleanup",
                "delete_w_low_rel_mixed_cleanup_interleaved_ids",
                "fini_query_w_singleton_in_scope_no_module",
                "fini_query_w_singleton_in_module",
                "fini_observer_w_relationship_in_scope",
                "add_on_delete_from_prefab",
                "add_on_delete_from_disabled",
                "delete_on_delete_from_prefab",
                "delete_on_delete_from_disabled",
                "remove_all_1",
                "remove_all_2",
                "remove_all_3",
                "delete_with_1",
                "delete_with_2",
                "delete_with_3"
            ]
        }, {
            "id": "Set",
            "testcases": [
                "set_empty",
                "set_nonempty",
                "set_non_empty_override",
                "set_again",
                "set_2",
                "add_set",
                "set_add",
                "set_add_other",
                "set_remove",
                "set_remove_other",
                "set_remove_twice",
                "set_and_new",
                "set_null",
                "ensure_new",
                "ensure_existing",
                "ensure_tag_new",
                "ensure_tag_existing",
                "ensure_tag_new_w_comp",
                "ensure_tag_existing_w_comp",
                "ensure_tag_new_w_pair",
                "ensure_tag_existing_w_pair",
                "get_mut_not_existing",
                "get_mut_existing",
                "get_mut_tag",
                "get_mut_pair",
                "get_mut_pair_second",
                "modified_w_on_set",
                "modified_no_component",
                "ensure_w_add_in_on_add",
                "ensure_w_remove_in_on_add",
                "ensure_w_realloc_in_on_add",
                "emplace",
                "emplace_2",
                "emplace_existing",
                "emplace_w_move",
                "emplace_w_observer_w_add",
                "emplace_existing_w_check"
            ]
        }, {
            "id": "ReadWrite",
            "testcases": [
                "read",
                "nested_read",
                "write",
                "nested_write",
                "add_while_read",
                "add_while_write",
                "read_from_stage",
                "write_from_stage"
            ]
        }, {
            "id": "Lookup",
            "setup": true,
            "testcases": [
                "lookup",
                "lookup_component",
                "lookup_not_found",
                "lookup_child",
                "lookup_w_null_name",
                "lookup_after_name_reset",
                "get_name",
                "get_name_no_name",
                "get_name_from_empty",
                "lookup_by_id",
                "lookup_path_anonymous_parent",
                "lookup_path_0_parent",
                "lookup_path_0_parent_w_scope",
                "lookup_recycled_by_id",
                "lookup_symbol_by_id",
                "lookup_name_w_digit",
                "lookup_symbol_w_digit",
                "lookup_path_w_digit",
                "lookup_name_w_spaces",
                "lookup_path_w_spaces",
                "lookup_number",
                "lookup_number_path",
                "lookup_number_0",
                "set_name_of_existing",
                "change_name_of_existing",
                "lookup_alias",
                "lookup_scoped_alias",
                "define_duplicate_alias",
                "lookup_null",
                "lookup_symbol_null",
                "lookup_this",
                "lookup_wildcard",
                "lookup_any",
                "lookup_variable",
                "lookup_path_this",
                "lookup_path_wildcard",
                "lookup_path_this_from_scope",
                "lookup_path_wildcard_from_scope",
                "resolve_builtin_symbols",
                "lookup_from_scope_staged",
                "lookup_core",
                "lookup_core_from_stage",
                "lookup_custom_search_path",
                "lookup_custom_search_path_from_stage",
                "lookup_custom_search_path_n_elems",
                "set_same_name",
                "set_same_name_after_reparenting",
                "defer_set_name",
                "defer_set_same_name",
                "lookup_invalid_digit",
                "lookup_child_invalid_digit",
                "lookup_digit_from_wrong_scope",
                "lookup_core_entity_from_wrong_scope",
                "lookup_alias_w_number",
                "lookup_symbol_path",
                "lookup_name_escaped_sep",
                "lookup_path_escaped_sep",
                "lookup_name_63_chars",
                "lookup_name_64_chars",
                "lookup_name_65_chars",
                "lookup_path_63_chars",
                "lookup_path_64_chars",
                "lookup_path_65_chars"
            ]
        }, {
            "id": "Singleton",
            "testcases": [
                "add_singleton",
                "remove_singleton",
                "set_get_singleton",
                "ensure_singleton",
                "singleton_system"
            ]
        }, {
            "id": "Clone",
            "testcases": [
                "empty",
                "empty_w_value",
                "null",
                "null_w_value",
                "1_component",
                "2_component",
                "1_component_w_value",
                "1_component_w_lifecycle",
                "2_component_w_value",
                "3_component",
                "3_component_w_value",
                "tag",
                "tag_w_value",
                "1_tag_1_component",
                "1_tag_1_component_w_value",
                "clone_w_name"
            ]
        }, {
            "id": "ComponentLifecycle",
            "setup": true,
            "testcases": [
                "ctor_on_add",
                "ctor_on_new",
                "dtor_on_remove",
                "dtor_on_delete",
                "copy_on_set",
                "copy_on_override",
                "copy_on_clone",
                "no_copy_on_move",
                "ctor_on_tag",
                "dtor_on_tag",
                "copy_on_tag",
                "move_on_tag",
                "merge_to_different_table",
                "merge_to_new_table",
                "delete_in_stage",
                "ctor_on_add_pair",
                "ctor_on_add_pair_tag",
                "ctor_on_move_pair",
                "move_on_realloc",
                "move_on_bulk_new",
                "on_add_on_bulk_new",
                "move_on_delete",
                "move_dtor_on_delete",
                "copy_on_override_pair",
                "copy_on_override_pair_tag",
                "copy_on_set_pair",
                "copy_on_set_pair_tag",
                "allow_lifecycle_overwrite_equal_callbacks",
                "set_lifecycle_after_trigger",
                "valid_entity_in_dtor_after_delete",
                "ctor_w_emplace",
                "ctor_w_emplace_defer",
                "ctor_w_emplace_defer_use_move_ctor",
                "ctor_w_emplace_defer_twice",
                "ctor_w_emplace_defer_existing",
                "on_add_w_emplace",
                "on_add_w_emplace_existing",
                "on_add_w_emplace_defer",
                "merge_async_stage_w_emplace",
                "merge_async_stage_w_emplace_to_deferred_world",
                "emplace_grow_w_existing_component",
                "dtor_on_fini",
                "valid_type_in_dtor_on_fini",
                "valid_other_type_of_entity_in_dtor_on_fini",
                "delete_in_dtor_other_type_on_fini",
                "delete_in_dtor_other_type_on_delete_parent",
                "delete_in_dtor_other_type_on_delete",
                "delete_self_in_dtor_on_delete",
                "on_set_after_set",
                "on_add_after_new",
                "on_add_after_add",
                "on_add_after_set",
                "on_remove_after_remove",
                "on_remove_after_clear",
                "on_remove_after_delete",
                "free_component_new_id_while_fini",
                "dtor_component_new_id_while_fini",
                "free_component_new_pair_id_while_fini",
                "dtor_component_new_pair_id_while_fini",
                "free_component_new_obj_pair_id_while_fini",
                "dtor_component_new_obj_pair_id_while_fini",
                "ctor_move_dtor_after_resize",
                "ctx_free",
                "binding_ctx_free",
                "lifecycle_ctx_free",
                "ctx_free_after_delete_component",
                "binding_ctx_free_after_delete_component",
                "lifecycle_ctx_free_after_delete_component",
                "on_add_ctx",
                "on_remove_ctx",
                "on_set_ctx",
                "on_add_w_existing_component",
                "on_remove_w_existing_component",
                "component_init_set_hooks",
                "component_init_name_from_type_info",
                "component_init_scoped_name_from_type_info",
                "component_init_w_recycled_id",
                "component_init_w_recycled_non_component_id",
                "on_add_after_ctor_w_add",
                "on_add_after_ctor_w_add_to",
                "with_before_hooks",
                "with_component_on_add",
                "move_ctor_on_move",
                "ptr_to_self",
                "ctor_move_dtor_from_move_ctor",
                "on_add_hook_check_offset",
                "on_remove_hook_check_offset",
                "on_set_hook_check_offset",
                "on_set_hook_on_override",
                "on_set_hook_on_auto_override",
                "batched_set_new_component_w_lifecycle",
                "batched_ensure_new_component_w_lifecycle",
                "on_nested_prefab_copy_test_invokes_copy_count",
                "no_move_no_move_ctor_with_move_dtor_with_ctor_move_dtor",
                "new_w_table_ctor",
                "new_w_table_on_add_hook",
                "count_in_on_add",
                "count_in_on_remove"
            ]
        }, {
            "id": "Pairs",
            "testcases": [
                "type_w_one_pair",
                "type_w_two_pairs",
                "add_pair",
                "remove_pair",
                "add_tag_pair_for_tag",
                "add_tag_pair_for_component",
                "query_2_pairs",
                "query_2_pairs_2_instances_per_type",
                "query_pair_or_component",
                "query_pair_or_pair",
                "query_not_pair",
                "override_pair",
                "override_tag_pair",
                "pair_w_component_query",
                "on_add_pair",
                "on_add_pair_tag",
                "on_remove_pair",
                "on_remove_pair_tag",
                "on_remove_pair_on_delete",
                "on_remove_pair_tag_on_delete",
                "get_typeid_w_recycled_rel",
                "get_typeid_w_recycled_obj",
                "id_str_w_recycled_rel",
                "id_str_w_recycled_obj",
                "set_object_w_zero_sized_rel_comp",
                "dsl_pair",
                "dsl_pair_w_pred_wildcard",
                "dsl_pair_w_obj_wildcard",
                "dsl_pair_w_both_wildcard",
                "dsl_pair_w_explicit_subj_this",
                "dsl_pair_w_explicit_subj",
                "api_pair",
                "api_pair_w_pred_wildcard",
                "api_pair_w_obj_wildcard",
                "api_pair_w_both_wildcard",
                "api_pair_w_explicit_subj_this",
                "api_pair_w_explicit_subj",
                "typeid_from_tag",
                "typeid_from_component",
                "typeid_from_pair",
                "typeid_from_pair_w_rel_type",
                "typeid_from_pair_w_obj_type",
                "typeid_from_pair_w_rel_obj_type",
                "typeid_from_pair_w_rel_0_obj_type",
                "typeid_from_pair_w_rel_obj_0_type",
                "typeid_from_pair_w_rel_0_obj_0_type",
                "typeid_from_pair_with_0_obj",
                "typeid_from_pair_w_override",
                "typeid_from_pair_w_toggle",
                "tag_pair_w_rel_comp",
                "tag_pair_w_obj_comp",
                "tag_pair_w_rel_obj_comp",
                "get_tag_pair_w_rel_comp",
                "get_tag_pair_w_obj_comp",
                "get_tag_pair_w_rel_obj_comp",
                "tag_pair_w_childof_w_comp",
                "tag_pair_w_isa_w_comp",
                "get_1_target",
                "get_1_target_not_found",
                "get_n_targets",
                "get_target_from_base",
                "get_target_from_2nd_base",
                "get_target_from_base_w_pair_on_instance",
                "get_childof_target_from_base",
                "get_dontinherit_target_from_base",
                "get_target_for_id_from_self",
                "get_target_for_id_from_base",
                "get_target_for_id_from_nested_base",
                "get_target_for_id_not_found",
                "get_target_for_wildcard_from_self",
                "get_target_for_wildcard_from_base",
                "get_target_for_wildcard_from_nested_base",
                "get_target_for_id_from_empty",
                "get_target_for_id_from_empty_no_rel",
                "get_target_for_id_not_empty_not_found",
                "get_target_for_id_from_stage",
                "get_target_for_id_no_id",
                "get_parent",
                "get_parent_from_root",
                "ignore_childof_from_base",
                "add_exclusive_relation_twice",
                "add_same_exclusive_relation_twice",
                "set_exclusive_relation_twice",
                "add_exclusive_non_empty_table",
                "add_exclusive_non_empty_table_w_pairs",
                "add_pair_to_entity_w_exclusive_pair",
                "add_pair_to_entity_w_scope",
                "add_existing_exclusive_pair_after_pair",
                "add_remove_exclusive_property",
                "add_symmetric_relation",
                "remove_symmetric_relation",
                "delete_entity_w_symmetric_relation",
                "add_symmetric_exclusive_relation",
                "add_symmetric_recycled_relation",
                "symmetric_w_childof",
                "with",
                "2_with",
                "nested_with",
                "with_relation",
                "2_with_relation",
                "with_for_existing",
                "nested_with_relation",
                "65k_relations",
                "add_not_alive_relation",
                "remove_wildcard",
                "remove_relation_wildcard",
                "remove_wildcard_all",
                "inherit_exclusive",
                "dont_inherit",
                "has_wildcard_w_pair",
                "has_pair_wildcard_w_tag",
                "oneof_self",
                "oneof_other",
                "oneof_self_constraint_violated",
                "oneof_other_constraint_violated",
                "oneof_other_rel_parent_constraint_violated",
                "set_w_recycled_rel",
                "set_w_recycled_tgt",
                "force_relationship_on_component",
                "force_relationship_on_target",
                "force_relationship_on_target_trait",
                "force_relationship_on_relationship",
                "force_target_on_component",
                "force_target_on_relationship",
                "force_target_on_target"
            ]
        }, {
           "id": "Trigger",
           "testcases": [
               "on_add_trigger_before_table",
               "on_add_trigger_after_table",
               "on_remove_trigger_before_table",
               "on_remove_trigger_after_table",
               "on_add_tag",
               "on_add_component",
               "on_add_wildcard",
               "on_add_wildcard_after_table",
               "on_add_pair",
               "on_add_pair_obj_wildcard",
               "on_add_pair_pred_wildcard",
               "on_add_pair_wildcard",
               "on_add_any",
               "on_remove_tag",
               "on_remove_component",
               "on_remove_wildcard",
               "on_remove_pair",
               "on_remove_pair_obj_wildcard",
               "on_remove_pair_pred_wildcard",
               "on_remove_pair_wildcard",
               "wildcard_pair_w_pred_component",
               "wildcard_pair_w_obj_component",
               "on_add_remove",
               "on_set_component",
               "on_set_wildcard",
               "on_set_pair",
               "on_set_pair_w_obj_wildcard",
               "on_set_pair_pred_wildcard",
               "on_set_pair_wildcard",
               "on_set_component_after_modified",
               "un_set_component",
               "un_set_wildcard",
               "un_set_pair",
               "un_set_pair_w_obj_wildcard",
               "un_set_pair_pred_wildcard",
               "un_set_pair_wildcard",
               "on_add_not_tag",
               "on_remove_not_tag",
               "on_add_superset",
               "on_add_superset_2_levels",
               "on_remove_superset",
               "on_add_superset_childof",
               "on_remove_superset_childof",
               "on_add_self_superset",
               "on_remove_self_superset",
               "add_twice",
               "remove_twice",
               "on_remove_w_clear",
               "on_remove_w_delete",
               "on_remove_w_world_fini",
               "on_add_w_clone",
               "add_in_trigger",
               "remove_in_trigger",
               "clear_in_trigger",
               "delete_in_trigger",
               "trigger_w_named_entity",
               "on_remove_tree",
               "set_get_context",
               "set_get_binding_context",
               "delete_trigger_w_delete_ctx",
               "trigger_w_index",
               "iter_type_set",
               "readonly_term",
               "trigger_on_prefab",
               "trigger_on_disabled",
               "trigger_on_prefab_tag",
               "trigger_on_disabled_tag",
               "trigger_cleanup_2_w_self_super_id",
               "on_add_yield_existing",
               "on_add_yield_existing_2_tables",
               "on_add_yield_existing_wildcard_pair",
               "on_set_yield_existing",
               "filter_term",
               "on_add_remove_after_exclusive_add",
               "on_add_base",
               "on_remove_base",
               "on_set_base",
               "on_unset_base",
               "on_add_base_superset_trigger",
               "on_add_base_superset_trigger_2_lvls",
               "on_add_base_2_entities",
               "on_add_base_2_entities_filter",
               "on_set_base_w_value_2_entities_instanced",
               "on_add_base_w_override",
               "on_set_base_w_override",
               "entity_source_1_trigger",
               "entity_source_2_triggers",
               "entity_source_base_set",
               "not_from_superset",
               "create_stresstest",
               "add_non_existing_entity",
               "on_add_self_trigger_with_add_isa",
               "on_set_self_trigger_with_add_isa",
               "notify_propagated_twice",
               "trigger_superset_wildcard",
               "remove_wildcard_1_id",
               "remove_wildcard_2_ids",
               "on_set_w_tag",
               "create_triggers_in_trigger",
               "on_add_superset_w_component",
               "on_set_superset_w_component",
               "on_add_base_superset_w_owned",
               "on_add_base_self_superset_w_owned",
               "on_set_self_from_child_of_prefab",
               "on_set_self_superset_from_child_of_prefab",
               "on_set_self_from_child_base_of_prefab",
               "on_set_self_superset_from_child_base_of_prefab",
               "on_set_self_auto_override",
               "on_set_self_superset_auto_override",
               "on_set_superset_auto_override",
               "not_only",
               "not_only_w_base",
               "not_only_w_base_no_match",
               "on_set_superset_after_filter_observer",
               "on_set_superset_after_filter_observer_w_on_add",
               "on_set_superset_after_filter_observer_w_on_add_isa_after_set",
               "on_set_superset_after_filter_observer_w_on_add_2"
           ]
        }, {
            "id": "Observer",
            "testcases": [
                "on_add_before_edge",
                "on_add_after_edge",
                "on_add_wildcard_before_edge",
                "on_add_wildcard_after_edge",
                "on_add_R_wildcard_before_edge",
                "on_add_R_wildcard_after_edge",
                "on_add_wildcard_T_before_edge",
                "on_add_wildcard_T_after_edge",
                "on_add_wildcard_wildcard_before_edge",
                "on_add_wildcard_wildcard_after_edge",
                "on_add_any_before_edge",
                "on_add_any_after_edge",
                "on_remove_before_edge",
                "on_remove_after_edge",
                "on_remove_wildcard_before_edge",
                "on_remove_wildcard_after_edge",
                "on_remove_R_wildcard_before_edge",
                "on_remove_R_wildcard_after_edge",
                "on_remove_wildcard_T_before_edge",
                "on_remove_wildcard_T_after_edge",
                "on_remove_wildcard_wildcard_before_edge",
                "on_remove_wildcard_wildcard_after_edge",
                "on_remove_any_before_edge",
                "on_remove_any_after_edge",
                "2_terms_w_on_add",
                "2_terms_w_on_remove",
                "2_terms_w_on_set_value",
                "2_terms_w_on_remove_value",
                "2_terms_w_on_set_value_self_up",
                "2_terms_w_on_remove_value_self_up",
                "2_terms_w_on_add_2nd",
                "2_terms_w_on_remove_2nd",
                "2_pair_terms_w_on_add",
                "2_pair_terms_w_on_remove",
                "2_wildcard_pair_terms_w_on_add",
                "2_wildcard_pair_terms_w_on_add_2_matching",
                "2_wildcard_pair_terms_w_on_add_3_matching",
                "2_wildcard_pair_terms_w_on_remove",
                "on_set_n_entities",
                "on_set_n_entities_2_comp",
                "wildcard_pair_w_pred_component",
                "wildcard_pair_w_obj_component",
                "2_terms_1_not_w_on_add",
                "2_terms_1_not_w_on_remove",
                "2_terms_w_on_set",
                "2_terms_w_un_set",
                "3_terms_2_or_on_add",
                "3_terms_2_or_on_remove",
                "2_terms_w_from_entity_on_add",
                "2_terms_on_remove_on_clear",
                "2_terms_on_remove_on_delete",
                "add_after_delete_observer",
                "remove_after_delete_observer",
                "delete_observer_w_ctx",
                "update_ctx",
                "filter_w_strings",
                "iter_type_set",
                "readonly_term",
                "trigger_on_prefab",
                "trigger_on_disabled",
                "unset_1_of_1",
                "unset_1_of_2",
                "unset_1_of_3",
                "unset_on_delete_1",
                "unset_on_delete_2",
                "unset_on_delete_3",
                "unset_on_fini_1",
                "unset_on_fini_2",
                "unset_on_fini_3",
                "overlapping_unset_systems",
                "unset_move_to_nonempty_table",
                "write_in_unset",
                "filter_term",
                "2_terms_1_filter",
                "3_terms_2_filter",
                "and_from",
                "or_from",
                "and_from_empty",
                "or_from_empty",
                "and_from_empty_w_tag",
                "or_from_empty_w_tag",
                "notify_propagated_twice",
                "on_add_yield_existing",
                "on_add_yield_existing_2_tables",
                "on_add_yield_existing_2_terms",
                "on_add_yield_existing_wildcard",
                "on_add_yield_existing_wildcard_multi",
                "on_add_yield_existing_wildcard_multi_w_wildcard_pivot",
                "on_remove_yield_existing",
                "on_remove_yield_existing_2_tables",
                "on_remove_yield_existing_2_terms",
                "on_remove_yield_existing_wildcard",
                "on_remove_yield_existing_wildcard_multi",
                "on_remove_yield_existing_wildcard_multi_w_wildcard_pivot",
                "on_add_remove_yield_existing",
                "on_add_remove_yield_existing_flags",
                "on_add_remove_no_on_add_yield_existing",
                "on_add_remove_no_on_remove_yield_existing",
                "yield_existing_flags_w_multi_observer",
                "yield_on_create_without_on_add",
                "yield_on_delete_without_on_remove",
                "observer_superset_wildcard",
                "observer_superset_wildcard_add_isa",
                "observer_superset_wildcard_add_isa_at_offset",
                "on_set_w_tag",
                "mixed_on_set_w_tag",
                "mixed_un_set_w_tag",
                "match_base_w_id_at_offset",
                "custom_run_action",
                "custom_run_action_2_terms",
                "custom_run_action_w_iter_next_2_terms",
                "custom_run_action_w_field",
                "custom_run_action_w_2_fields",
                "custom_run_w_yield_existing",
                "custom_run_w_yield_existing_1_field",
                "custom_run_w_yield_existing_1_field_w_callback",
                "custom_run_w_yield_existing_2_fields",
                "custom_run_w_yield_existing_2_fields_w_callback",
                "read_in_on_remove_after_add_other_w_not",
                "observer_w_short_notation",
                "observer_w_filter_term",
                "multi_observer_w_ctx_free",
                "propagate_after_on_delete_clear_action",
                "on_add_after_batch_w_exclusive_adds",
                "propagate_match_relationship_w_self_up",
                "propagate_match_relationship_w_up",
                "propagate_isa_of_parent_add",
                "propagate_isa_of_parent_remove",
                "propagate_isa_of_parent_set",
                "propagate_add_childof_of_parent",
                "propagate_add_childof_of_parent_w_siblings",
                "propagate_add_childof_w_parent_w_base",
                "propagate_remove_childof_w_parent_w_base",
                "propagate_remove_childof_of_parent",
                "propagate_add_isa_of_parent",
                "propagate_remove_isa_of_parent",
                "propagate_add_childof_of_base",
                "propagate_remove_childof_of_base",
                "emit_for_parent_w_prefab_child_and_instance",
                "observer_w_2_fixed_src",
                "emit_for_recreated_id_after_remove_all",
                "emit_for_recreated_id_after_remove_all_wildcard",
                "emit_for_recreated_id_after_delete_with",
                "emit_for_recreated_id_after_delete_with_wildcard",
                "delete_observed_id",
                "delete_observed_rel",
                "delete_observed_tgt",
                "on_add_2_pairs_w_uni_observer",
                "on_add_2_pairs_w_multi_observer",
                "on_set_2_pairs_w_uni_observer",
                "on_set_2_pairs_w_multi_observer",
                "on_remove_target_from_base_at_offset",
                "on_remove_target_component_from_base_at_offset",
                "filter_observer_after_observer",
                "notify_after_defer_batched",
                "notify_after_defer_batched_2_entities_in_table",
                "notify_after_defer_batched_2_entities_in_table_w_tgt",
                "multi_observer_table_fill_w_singleton",
                "wildcard_propagate_w_other_table",
                "add_in_on_add_yield_existing",
                "add_in_on_add_yield_existing_multi",
                "add_in_on_remove_yield_existing",
                "add_in_on_remove_yield_existing_multi",
                "disable_observer",
                "disable_observer_module",
                "disable_observer_module_nested",
                "disable_observer_and_module",
                "disable_multi_observer",
                "disable_multi_observer_module",
                "disable_multi_observer_module_nested",
                "disable_multi_observer_and_module",
                "tag_w_on_set_and_on_add",
                "tag_w_on_set_and_on_add_reverse",
                "on_add_pair_w_rel_any",
                "on_remove_pair_w_rel_any",
                "on_add_pair_w_tgt_any",
                "on_remove_pair_w_tgt_any",
                "on_add_pair_w_any_any",
                "on_remove_pair_w_any_any",
                "on_add_any",
                "on_remove_any",
                "get_filter",
                "uni_observer_eval_count",
                "multi_observer_eval_count",
                "yield_existing_uni_no_this",
                "yield_existing_multi_no_this",
                "observer_no_id_in_scope",
                "register_comp_in_emit_named_entity",
                "register_comp_w_macro_in_emit_named_entity",
                "add_to_self_in_emit_entity",
                "on_set_w_not_tag",
                "on_set_w_not_component",
                "wildcard_event",
                "register_callback_after_run",
                "register_run_after_callback",
                "register_callback_after_run_ctx",
                "register_run_after_callback_ctx",
                "on_add_after_new_w_table",
                "ref_flag_term_1",
                "ref_flag_term_2",
                "forward_up_flag_term_1",
                "forward_up_flag_term_2",
                "propagate_up_flag_term_1",
                "propagate_up_flag_term_2",
                "row_flag_term_1",
                "row_flag_term_2",
                "cache_test_1",
                "cache_test_2",
                "cache_test_3",
                "cache_test_4",
                "cache_test_5",
                "cache_test_6",
                "cache_test_7",
                "cache_test_8",
                "cache_test_9",
                "cache_test_10",
                "cache_test_11",
                "cache_test_12",
                "cache_test_13",
                "cache_test_14",
                "cache_test_15",
                "cache_test_16"
            ]
        }, {
            "id": "ObserverOnSet",
            "testcases": [
                "set_1_of_1",
                "set_1_of_2",
                "set_1_of_3",
                "set_1_of_2_1_from_base",
                "set_1_of_3_1_from_base",
                "add_base",
                "add_base_to_1_overridden",
                "add_base_to_2_overridden",
                "add_base_to_1_of_2_overridden",
                "on_set_after_remove_override",
                "no_set_after_remove_base",
                "un_set_after_remove",
                "un_set_after_remove_base",
                "add_to_current_in_on_set",
                "remove_from_current_in_on_set",
                "remove_set_component_in_on_set",
                "match_table_created_w_add_in_on_set",
                "set_optional",
                "set_from_nothing",
                "add_0_entity_in_on_set",
                "on_set_prefab"
            ]
        }, {
            "id": "TriggerOnAdd",
            "setup": true,
            "testcases": [
                "new_match_1_of_1",
                "new_match_1_of_2",
                "new_no_match_1",
                "new_w_count_match_1_of_1",
                "add_match_1_of_1",
                "add_match_1_of_2",
                "add_no_match_1",
                "set_match_1_of_1",
                "set_no_match_1",
                "clone_match_1_of_1",
                "clone_match_1_of_2",
                "add_again_1",
                "set_again_1",
                "add_again_2",
                "override_after_add_in_on_add",
                "set_after_add_in_on_add",
                "add_again_in_progress",
                "add_in_progress_before_system_def",
                "2_systems_w_table_creation",
                "2_systems_w_table_creation_in_progress",
                "sys_context",
                "get_sys_context_from_param",
                "remove_added_component_in_on_add_w_set",
                "on_add_in_on_add",
                "on_remove_in_on_add",
                "on_set_in_on_add",
                "on_add_in_on_update",
                "emplace",
                "add_after_delete_trigger",
                "add_after_delete_wildcard_id_trigger"
            ]
        }, {
            "id": "TriggerOnRemove",
            "testcases": [
                "remove",
                "remove_no_match",
                "delete",
                "delete_no_match",
                "remove_watched",
                "delete_watched",
                "on_remove_in_on_update",
                "valid_entity_after_delete",
                "remove_after_delete_trigger",
                "remove_after_delete_wildcard_id_trigger",
                "has_removed_tag_trigger_1_tag",
                "has_removed_tag_trigger_2_tags"
            ]
        }, {
            "id": "TriggerOnSet",
            "testcases": [
                "set",
                "set_new",
                "set_again",
                "clone",
                "clone_w_value",
                "set_and_add_system",
                "on_set_after_override",
                "on_set_after_override_w_new",
                "on_set_after_override_w_new_w_count",
                "on_set_after_override_1_of_2_overridden",
                "on_set_after_remove_override",
                "emplace",
                "un_set_tag_w_remove",
                "un_set_tag_w_clear",
                "un_set_tag_w_delete"
            ]
        }, {
            "id": "Monitor",
            "testcases": [
                "1_comp",
                "2_comps",
                "1_comp_1_not",
                "1_parent",
                "1_comp_1_parent",
                "1_comp_prefab_new",
                "1_comp_prefab_add",
                "monitor_w_and",
                "monitor_w_or",
                "monitor_w_not",
                "monitor_w_optional",
                "monitor_w_superset",
                "monitor_w_self_superset",
                "monitor_w_wildcard",
                "monitor_at_fini",
                "monitor_other_table",
                "monitor_component",
                "yield_existing"
            ]
        }, {
            "id": "Prefab",
            "setup": true,
            "testcases": [
                "new_w_prefab",
                "new_w_count_prefab",
                "new_w_type_w_prefab",
                "add_prefab",
                "remove_prefab_after_new",
                "remove_prefab_after_add",
                "override_component",
                "override_remove_component",
                "override_2_of_3_components_1_self",
                "new_type_w_1_override",
                "new_type_w_2_overrides",
                "get_ptr_prefab",
                "iterate_w_prefab_shared",
                "match_entity_prefab_w_system_optional",
                "prefab_in_system_expr",
                "dont_match_prefab",
                "new_w_count_w_override",
                "override_2_components_different_size",
                "ignore_prefab_parent_component",
                "match_table_created_in_progress",
                "prefab_w_1_child",
                "prefab_w_2_children",
                "prefab_w_grandchild",
                "prefab_tree_1_2_1",
                "prefab_w_base_w_child",
                "prefab_w_child_w_base",
                "prefab_w_child_w_base_w_children",
                "prefab_w_child_new_w_count",
                "prefab_auto_override_child_component",
                "ignore_on_add",
                "ignore_on_remove",
                "ignore_on_set",
                "on_set_on_instance",
                "instantiate_in_progress",
                "copy_from_prefab_in_progress",
                "copy_from_prefab_first_instance_in_progress",
                "ref_after_realloc",
                "revalidate_ref_w_mixed_table_refs",
                "no_overwrite_on_2nd_add",
                "no_overwrite_on_2nd_add_in_progress",
                "no_instantiate_on_2nd_add",
                "no_instantiate_on_2nd_add_in_progress",
                "nested_prefab_in_progress_w_count",
                "nested_prefab_in_progress_w_count_set_after_override",
                "get_ptr_from_prefab_from_new_table_in_progress",
                "match_base",
                "match_base_after_add_in_prev_phase",
                "override_watched_prefab",
                "rematch_twice",
                "add_to_empty_base_in_system",
                "inherit_disabled",
                "clone_after_inherit_in_on_add",
                "override_from_nested",
                "create_multiple_nested_w_on_set",
                "create_multiple_nested_w_on_set_in_progress",
                "single_on_set_on_child_w_override",
                "auto_override",
                "auto_override_2",
                "auto_override_nested",
                "auto_override_pair",
                "auto_override_pair_w_component",
                "auto_override_2_pairs",
                "auto_override_2_pairs_w_component",
                "auto_override_2_pairs_same_obj",
                "prefab_instanceof_hierarchy",
                "override_tag",
                "empty_prefab",
                "instanceof_0",
                "instantiate_empty_child_table",
                "instantiate_emptied_child_table",
                "override_2_prefabs",
                "rematch_after_add_instanceof_to_parent",
                "child_of_instance",
                "rematch_after_prefab_delete",
                "add_tag_w_low_id_to_instance",
                "get_type_after_base_add",
                "get_type_after_recycled_base_add",
                "new_w_recycled_base",
                "add_recycled_base",
                "remove_recycled_base",
                "get_from_recycled_base",
                "override_from_recycled_base",
                "remove_override_from_recycled_base",
                "instantiate_tree_from_recycled_base",
                "rematch_after_add_to_recycled_base",
                "get_tag_from_2nd_base",
                "get_component_from_2nd_base",
                "get_component_from_1st_base",
                "get_component_from_2nd_base_of_base",
                "get_component_from_1st_base_of_base",
                "get_component_from_2nd_base_prefab_base",
                "get_component_from_1st_base_prefab_base",
                "get_component_from_2nd_base_of_base_prefab_base",
                "get_component_from_1st_base_of_base_prefab_base",
                "fail_on_override_final",
                "instantiate_tree_once",
                "nested_prefab_w_named_children",
                "dont_copy_children_for_non_prefab_base",
                "get_component_pair_from_base",
                "get_component_pair_from_prefab_base",
                "override_dont_inherit",
                "prefab_child_w_dont_inherit_component",
                "prefab_child_override",
                "prefab_child_override_w_exclusive_pair",
                "prefab_1_slot",
                "prefab_2_slots",
                "prefab_w_nested_slot",
                "prefab_w_mixed_slots",
                "prefab_variant_w_slot",
                "prefab_variant_w_base_slot",
                "prefab_variant_w_mixed_slots",
                "override_slot",
                "2_instances_w_slots_same_table",
                "slot_has_union",
                "slot_override",
                "base_slot_override",
                "override_twice_w_add",
                "override_twice_w_set",
                "auto_override_copy_once",
                "always_override",
                "always_override_pair",
                "child_of_prefab_is_prefab",
                "child_of_prefab_w_prefab_is_prefab",
                "child_of_prefab_w_prefab_is_prefab_w_component",
                "override_exclusive",
                "override_exclusive_2_lvls",
                "hierarchy_w_recycled_id",
                "disable_ids",
                "disable_nested_ids",
                "prefab_w_children_w_isa_auto_override",
                "prefab_child_w_override",
                "prefab_child_w_override_and_higher_component",
                "prefab_child_w_override_and_lower_component",
                "prefab_1_child_offset_id",
                "prefab_2_children_offset_id",
                "prefab_3_children_offset_id",
                "prefab_2_children_2_types_offset_id",
                "prefab_3_children_3_types_offset_id",
                "prefab_2_children_2_types_reverse_offset_id",
                "prefab_3_children_3_types_reverse_offset_id",
                "prefab_2_lvl_nested_children_offset_id",
                "prefab_3_lvl_nested_children_offset_id",
                "prefab_recycled_children_offset_id",
                "prefab_recycled_instance_offset_id",
                "prefab_children_recycled_offset_id",
                "prefab_recycled_children_recycled_offset_id",
                "prefab_recycled_children_recycled_offset_id_different_generation",
                "prefab_1_child_offset_id_occupied",
                "prefab_1_child_offset_id_recycled_occupied",
                "prefab_child_offset_w_smaller_child_id"
            ]
        }, {
            "id": "World",
            "setup": true,
            "testcases": [
                "progress_w_0",
                "progress_w_t",
                "get_tick",
                "entity_range_offset",
                "entity_range_offset_out_of_range",
                "entity_range_limit_out_of_range",
                "entity_range_add_existing_staged",
                "entity_range_add_in_range_staged",
                "entity_range_add_out_of_range_staged",
                "entity_range_out_of_range_check_disabled",
                "entity_range_check_after_delete",
                "entity_range_offset_0",
                "entity_range_set_limit_to_lower",
                "entity_range_set_limit_to_lower_than_offset",
                "entity_range_overlapping_new_id",
                "entity_range_overlapping_new_bulk_id",
                "dim",
                "phases",
                "phases_w_merging",
                "phases_match_in_create",
                "measure_time",
                "control_fps",
                "control_fps_busy_system",
                "control_fps_busy_app",
                "control_fps_random_system",
                "control_fps_random_app",
                "measure_fps_vs_actual",
                "measure_delta_time_vs_actual",
                "system_time_scale",
                "quit",
                "get_delta_time",
                "get_delta_time_auto",
                "recreate_world",
                "recreate_world_w_component",
                "no_threading",
                "no_time",
                "is_entity_enabled",
                "ensure_empty_root",
                "register_alias_twice_same_entity",
                "register_alias_twice_different_entity",
                "redefine_component",
                "delete_empty_tables_after_mini",
                "delete_empty_tables_after_init",
                "delete_1000_empty_tables",
                "delete_empty_tables_for_id",
                "use_after_delete_empty",
                "use_after_clear_empty",
                "use_after_delete_empty_w_component",
                "use_after_clear_empty_w_component",
                "use_after_clear_empty_w_component_w_lifecycle",
                "use_after_clear_unused",
                "ensure_in_at_fini",
                "get_type_info",
                "get_type_info_after_delete_with",
                "get_type_info_after_reuse",
                "no_name_prefix_after_init",
                "component_init_w_name_prefix",
                "component_macro_w_name_prefix",
                "set_get_context",
                "set_get_binding_context",
                "set_get_context_w_free",
                "set_get_binding_context_w_free",
                "get_entities",
                "run_post_frame",
                "run_post_frame_outside_of_frame",
                "get_flags"
            ]
        }, {
            "id": "WorldInfo",
            "testcases": [
                "get_tick",
                "table_count",
                "empty_table_count",
                "table_create_count",
                "table_delete_count",
                "id_tag_component_count",
                "id_pair_count"
            ]
        }, {
            "id": "Type",
            "setup": true,
            "testcases": [
                "type_of_1_tostr",
                "type_of_2_tostr",
                "type_of_2_tostr_no_id",
                "invalid_entity_type_expression",
                "invalid_system_type_expression",
                "get_type",
                "get_type_from_empty",
                "get_type_from_0",
                "type_to_expr_pair",
                "type_to_expr_pair_w_comp",
                "type_to_expr_scope",
                "type_to_expr_pair_w_override",
                "entity_str",
                "entity_path_str",
                "entity_instanceof_str",
                "entity_childof_str",
                "entity_pair_str",
                "entity_str_small_buffer",
                "role_pair_str",
                "role_owned_str",
                "role_disabled_str",
                "large_type_expr",
                "large_type_expr_limit"
            ]
        }, {
            "id": "Commands",
            "testcases": [
                "defer_new",
                "defer_bulk_new",
                "defer_add",
                "defer_add_two",
                "defer_remove",
                "defer_remove_two",
                "defer_set",
                "defer_delete",
                "defer_twice",
                "defer_twice_in_progress",
                "run_w_defer",
                "system_in_progress_w_defer",
                "defer_ensure",
                "defer_ensure_no_modify",
                "defer_ensure_w_modify",
                "defer_modify",
                "defer_set_pair",
                "defer_clear",
                "defer_add_after_delete",
                "defer_set_after_delete",
                "defer_ensure_after_delete",
                "defer_ensure_after_delete_2nd_to_last",
                "defer_add_child_to_deleted_parent",
                "recreate_deleted_entity_while_deferred",
                "defer_add_to_recycled_id",
                "defer_add_to_recycled_id_w_role",
                "defer_add_to_recycled_relation",
                "defer_add_to_recycled_object",
                "defer_add_to_recycled_object_childof",
                "defer_add_to_deleted_id",
                "defer_add_to_deleted_id_w_role",
                "defer_add_to_deleted_relation",
                "defer_add_to_deleted_object",
                "defer_add_to_deleted_object_childof",
                "defer_delete_added_id",
                "defer_delete_added_id_w_role",
                "defer_delete_added_relation",
                "defer_delete_added_object",
                "defer_delete_added_object_childof",
                "discard_add",
                "discard_remove",
                "discard_add_two",
                "discard_remove_two",
                "discard_child",
                "discard_child_w_add",
                "defer_return_value",
                "defer_ensure_pair",
                "async_stage_add",
                "async_stage_add_twice",
                "async_stage_remove",
                "async_stage_clear",
                "async_stage_delete",
                "async_stage_new",
                "async_stage_readonly",
                "register_component_while_in_progress",
                "register_component_while_staged",
                "register_component_while_deferred",
                "defer_enable",
                "defer_disable",
                "defer_enable_from_stage",
                "defer_toggle",
                "defer_toggle_from_stage",
                "defer_delete_with",
                "defer_remove_all",
                "deferred_modified_after_remove",
                "merge_cleanup_ops_before_delete",
                "merge_nested_cleanup_ops_before_delete",
                "defer_suspend_resume",
                "create_observer_while_deferred",
                "create_query_while_deferred",
                "update_observer_while_deferred",
                "defer_set_large_component",
                "defer_while_suspend_readonly",
                "defer_while_suspend_readonly_w_existing_commands",
                "defer_remove_after_set",
                "defer_remove_after_set_w_observer",
                "defer_override_after_remove",
                "defer_override_after_remove_3_ops",
                "flush_stage_to_deferred_world",
                "add_in_observer_during_merge",
                "add_in_observer_during_merge_2_commands",
                "add_2_in_observer_while_on_remove_for_delete",
                "add_2_in_observer_while_on_remove_for_delete_child",
                "add_2_in_observer_while_on_remove_for_delete_recycled_id",
                "add_2_in_observer_while_on_remove_for_deferred_delete_recycled_id",
                "defer_add_after_clear",
                "defer_cmd_after_modified",
                "defer_remove_after_emplace_different_id",
                "defer_remove_after_set_and_emplace_different_id",
                "clear_after_add_to_nonempty",
                "remove_after_add_to_nonempty",
                "register_while_deferred_with_n_stages",
                "defer_2_sets_w_multi_observer",
                "defer_2_ensures_w_multi_observer",
                "defer_2_ensures_no_modified_w_multi_observer",
                "exists_remove_set",
                "absent_remove_set",
                "exists_set_remove",
                "absent_set_remove",
                "exists_remove_ensure",
                "absent_remove_ensure",
                "exists_ensure_remove",
                "absent_ensure_remove",
                "exists_set_w_ensure",
                "absent_set_invoke_on_set",
                "exists_set_invoke_on_set",
                "defer_ensure_no_on_set",
                "defer_existing_ensure_no_on_set",
                "ensure_override",
                "set_override",
                "absent_ensure_for_entity_w_tag",
                "on_set_hook_before_on_add_for_existing_component",
                "defer_2_sets_w_observer_same_component",
                "defer_2_sets_w_observer_other_component",
                "on_remove_after_deferred_clear_and_add",
                "defer_delete_recycle_same_id",
                "observer_while_defer_suspended",
                "on_add_hook_while_defer_suspended",
                "on_set_hook_while_defer_suspended",
                "on_remove_hook_while_defer_suspended",
                "on_set_hook_batched_is_deferred",
                "add_path",
                "add_path_to_deleted_parent",
                "add_path_nested",
                "add_path_nested_to_deleted_parent",
                "add_path_nested_to_created_deleted_parent",
                "add_path_w_stage",
                "add_path_to_deleted_parent_w_stage",
                "add_path_nested_w_stage",
                "add_path_nested_to_deleted_parent_w_stage",
                "add_path_nested_to_created_deleted_parent_w_stage",
                "defer_emplace_w_arg",
                "defer_emplace_existing_w_arg",
                "mixed_on_add_on_set_w_set_w_batching",
                "mixed_on_add_on_set_w_emplace",
                "add_isa_set_w_override_batched",
                "add_set_isa_w_override_batched",
                "add_batched_set_with",
                "defer_emplace_after_remove",
                "batched_w_table_change_in_observer",
                "redefine_named_in_threaded_app"
            ]
        }, {
            "id": "SingleThreadStaging",
            "setup": true,
            "testcases": [
                "new_empty",
                "new_w_component",
                "new_empty_w_count",
                "new_component_w_count",
                "add_to_new_empty",
                "2_add_to_new_empty",
                "add_remove_same_to_new_empty",
                "add_remove_2_same_to_new_empty",
                "add_remove_same_to_new_w_component",
                "2_add_1_remove_to_new_empty",
                "2_add_1_remove_same_to_new_empty",
                "clone",
                "clone_w_value",
                "add_to_current",
                "2_add_to_current",
                "remove_from_current",
                "remove_2_from_current",
                "add_remove_same_to_current",
                "add_remove_same_existing_to_current",
                "remove_add_same_to_current",
                "remove_add_same_existing_to_current",
                "add_remove_2_same_to_current",
                "add_remove_2_same_existing_to_current",
                "remove_add_2_same_to_current",
                "remove_add_2_same_existing_to_current",
                "add_remove_different_to_current",
                "add_remove_add_same_to_current",
                "2_add_1_remove_to_current",
                "1_add_2_remove_to_current",
                "delete_current",
                "delete_even",
                "delete_new_empty",
                "delete_new_w_component",
                "set_current",
                "set_new_empty",
                "set_new_w_component",
                "set_existing_new_w_component",
                "set_new_after_add",
                "remove_after_set",
                "delete_after_set",
                "add_to_current_in_on_add",
                "remove_from_current_in_on_add",
                "remove_added_component_in_on_add",
                "match_table_created_in_progress",
                "match_table_created_w_new_in_progress",
                "match_table_created_w_new_in_on_set",
                "merge_table_w_container_added_in_progress",
                "merge_table_w_container_added_on_set",
                "merge_table_w_container_added_on_set_reverse",
                "merge_after_tasks",
                "override_after_remove_in_progress",
                "get_parent_in_progress",
                "merge_once",
                "clear_stage_after_merge",
                "ensureable",
                "ensureable_from_main",
                "ensureable_w_add",
                "on_add_after_new_type_in_progress",
                "lock_table",
                "recursive_lock_table",
                "modify_after_lock",
                "get_object_from_stage",
                "add_to_world_while_readonly",
                "add_to_world_and_stage_while_readonly",
                "lookup_after_stage_count_change",
                "lookup_w_scope_after_stage_count_change",
                "with_after_stage_count_change"
            ]
        }, {
            "id": "Stresstests",
            "setup": true,
            "testcases": [
                "create_1m_set_two_components",
                "create_delete_entity_random_components",
                "set_entity_random_components",
                "create_delete_entity_random_components_staged",
                "set_entity_random_components_staged",
                "create_delete_entity_random_components_2_threads",
                "set_entity_random_components_2_threads",
                "create_delete_entity_random_components_6_threads",
                "set_entity_random_components_6_threads",
                "create_delete_entity_random_components_12_threads",
                "set_entity_random_components_12_threads",
                "create_2m_entities_1_comp",
                "create_2m_entities_bulk_1_comp",
                "add_1k_tags"
            ]
        }, {
            "id": "Table",
            "testcases": [
                "get_index",
                "get_index_after_tag",
                "get_index_not_in_table",
                "get_index_tag",
                "get_index_pair",
                "get_index_pair_tag",
                "get_column",
                "get_column_for_tag",
                "get_column_for_low_tag",
                "get_column_for_high_component",
                "get_column_for_component_after_tag",
                "get_column_w_offset",
                "get_id",
                "get_component",
                "get_pair",
                "get_from_stage",
                "get_depth",
                "get_depth_non_acyclic",
                "get_depth_2_paths",
                "get_column_size",
                "has_id",
                "has_pair",
                "has_wildcard_pair",
                "has_any_pair"
            ]
        }, {
            "id": "Poly",
            "testcases": [
                "on_set_poly_observer",
                "on_set_poly_query",
                "on_set_poly_system"
            ]
        }, {
            "id": "Internals",
            "setup": true,
            "testcases": [
                "deactivate_table",
                "activate_table",
                "activate_deactivate_table",
                "activate_deactivate_reactive",
                "activate_deactivate_activate_other",
                "no_double_system_table_after_merge",
                "recreate_deleted_table",
                "create_65k_tables",
                "no_duplicate_root_table_id",
                "override_os_api_w_addon",
                "records_resize_on_override",
                "table_observed_after_add",
                "table_observed_after_remove",
                "table_observed_after_clear",
                "table_observed_after_delete",
                "table_observed_after_on_remove",
                "table_observed_after_entity_flag",
                "table_create_leak_check"
            ]
        }, {
            "id": "Error",
            "setup": true,
            "testcases": [
                "abort",
                "abort_w_param",
                "override_abort",
                "assert_true",
                "assert_false",
                "assert_false_w_param",
                "error_codes",
                "log_dbg",
                "log_log",
                "log_warning",
                "log_error",
                "last_error"
            ]
        }, {
            "id": "StackAlloc",
            "testcases": [
                "init_fini",
                "multiple_overlapping_cursors"
            ]
        }]
    }
}
