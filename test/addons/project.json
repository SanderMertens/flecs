{
    "id": "addons",
    "type": "application",
    "value": {
        "author": "Sander Mertens",
        "description": "Test project for flecs addons",
        "public": false,
        "coverage": false,
        "use": [
            "flecs"
        ]
    },
    "test": {
        "testsuites": [{
            "id": "Parser",
            "testcases": [
                "resolve_this",
                "resolve_wildcard",
                "resolve_any",
                "resolve_is_a",
                "0",
                "component_implicit_subject",
                "component_explicit_subject",
                "component_explicit_subject_this",
                "component_explicit_subject_this_by_name",
                "component_explicit_subject_wildcard",
                "component_explicit_subject_any",
                "component_explicit_subject_0",
                "this_as_predicate",
                "this_as_object",
                "pair_implicit_subject",
                "pair_implicit_subject_wildcard_pred",
                "pair_implicit_subject_wildcard_obj",
                "pair_implicit_subject_any_pred",
                "pair_implicit_subject_any_obj",
                "pair_implicit_subject_this_pred",
                "pair_implicit_subject_this_obj",
                "pair_explicit_subject",
                "pair_explicit_subject_this",
                "pair_explicit_subject_this_by_name",
                "pair_explicit_subject_wildcard_pred",
                "pair_explicit_subject_wildcard_subj",
                "pair_explicit_subject_wildcard_obj",
                "pair_implicit_subject_0_object",
                "pair_explicit_subject_0_object",
                "pair_explicit_subject_0",
                "in_component_implicit_subject",
                "in_component_explicit_subject",
                "in_pair_implicit_subject",
                "in_pair_explicit_subject",
                "inout_component_implicit_subject",
                "inout_component_explicit_subject",
                "inout_pair_implicit_subject",
                "inout_pair_explicit_subject",   
                "out_component_implicit_subject",
                "out_component_explicit_subject",
                "out_pair_implicit_subject",
                "out_pair_explicit_subject",
                "inout_filter_component",
                "component_singleton",
                "this_singleton",
                "component_implicit_no_subject",
                "component_explicit_no_subject",
                "pair_no_subject",
                "variable_single_char",
                "variable_multi_char",
                "variable_multi_char_w_underscore",
                "variable_multi_char_w_number",
                "variable_multi_char_not_allcaps",
                "pred_var",
                "obj_var",
                "component_not",
                "pair_implicit_subject_not",
                "pair_explicit_subject_not",
                "2_component_not",
                "2_component_not_no_space",
                "component_optional",
                "2_component_optional",
                "2_component_optional_no_space",
                "from_and",
                "from_or",
                "from_not",
                "pair_implicit_subject_optional",
                "pair_explicit_subject_optional",                
                "pred_implicit_subject_w_role",
                "pred_explicit_subject_w_role",
                "pred_no_subject_w_role",
                "pair_implicit_subject_w_role",
                "pair_explicit_subject_w_role",
                "inout_role_pred_implicit_subject",
                "inout_role_pred_no_subject",
                "inout_role_pred_explicit_subject",
                "inout_role_pair_implicit_subject",
                "inout_role_pair_explicit_subject",
                "2_pred_implicit_subject",
                "2_pred_no_subject",
                "2_pred_explicit_subject",
                "2_pair_implicit_subject",
                "2_pair_explicit_subject",
                "2_pred_role",
                "2_pair_implicit_subj_role",
                "2_pair_explicit_subj_role",
                "2_or_pred_implicit_subj",
                "2_or_pred_explicit_subj",
                "2_or_pair_implicit_subj",
                "2_or_pair_explicit_subj",
                "2_or_pred_inout",
                "1_digit_pred_implicit_subj",
                "1_digit_pred_no_subj",
                "1_digit_pred_explicit_subj",
                "1_digit_pair_implicit_subj",
                "1_digit_pair_explicit_subj",
                "pred_implicit_subject_self",
                "pred_implicit_subject_superset",
                "pred_implicit_subject_subset",
                "pred_implicit_subject_superset_inclusive",
                "pred_implicit_subject_subset_inclusive",
                "pred_implicit_subject_superset_cascade",
                "pred_implicit_subject_subset_cascade",
                "pred_implicit_subject_superset_inclusive_cascade",
                "pred_implicit_subject_subset_inclusive_cascade",
                "pred_implicit_subject_implicit_superset_cascade",         
                "pred_implicit_subject_implicit_superset_inclusive_cascade",
                "pred_implicit_subject_implicit_superset_cascade_w_rel",         
                "pred_implicit_subject_implicit_superset_inclusive_cascade_w_rel",
                "pred_implicit_subject_superset_depth_1_digit",
                "pred_implicit_subject_subset_depth_1_digit",
                "pred_implicit_subject_superset_depth_2_digits",
                "pred_implicit_subject_subset_depth_2_digits",
                "pred_implicit_superset_min_max_depth",
                "pred_implicit_superset_childof_min_max_depth",                
                "pred_implicit_subject_superset_childof",
                "pred_implicit_subject_cascade_superset_childof",
                "pred_implicit_subject_superset_cascade_childof",
                "pred_implicit_subject_superset_cascade_childof_optional",
                "expr_w_symbol",
                "expr_w_newline",
                "subj_entity_w_explicit_self",
                "subj_entity_w_explicit_self_superset",
                "subj_entity_w_explicit_superset_relation",
                "subj_entity_w_explicit_self_superset_relation",
                "obj_entity_w_explicit_self",
                "obj_entity_w_explicit_self_superset",
                "obj_entity_w_explicit_superset_relation",
                "obj_entity_w_explicit_self_superset_relation",
                "pred_entity_w_explicit_self",
                "pred_entity_w_explicit_self_superset",
                "pred_entity_w_explicit_superset_relation",
                "pred_entity_w_explicit_self_superset_relation",
                "pred_entity_no_args_w_explicit_self",
                "pred_entity_no_args_w_explicit_self_superset",
                "pred_entity_no_args_w_explicit_superset_relation",
                "pred_entity_no_args_w_explicit_self_superset_relation",
                "pred_entity_no_args_2_terms_w_explicit_self",
                "pred_entity_no_args_2_terms_w_explicit_self_superset",
                "pred_entity_no_args_2_terms_w_explicit_superset_relation",
                "pred_entity_no_args_2_terms_w_explicit_self_superset_relation",
                "newline",
                "2_newlines",
                "3_newlines",
                "space",
                "2_spaces",
                "trailing_newline",
                "2_trailing_newlines",
                "trailing_space",
                "2_trailing_spaces",
                "template_type",
                "predicate_w_parens",
                "not_alive_pred",
                "not_alive_subj",
                "not_alive_obj",
                "this_subj_var_kind",
                "this_obj_var_kind",
                "this_subj_obj_var_kind",
                "var_w_name",
                "entity_pred_no_name",
                "entity_subj_no_name",
                "entity_obj_no_name",
                "this_pred_no_name",
                "this_subj_no_name",
                "this_obj_no_name",
                "auto_object_variable",
                "auto_object_variable_w_subj",
                "invalid_variable_only",
                "oneof_self_pred_w_relative_obj",
                "oneof_other_pred_w_relative_obj",
                "oneof_self_pred_w_invalid_obj",
                "oneof_other_pred_w_invalid_obj"
            ]
        }, {
            "id": "Plecs",
            "testcases": [
                "null",
                "empty",
                "space",
                "space_newline",
                "two_empty_newlines",
                "three_empty_newlines",
                "newline_trailing_space",
                "newline_trailing_spaces",
                "multiple_trailing_newlines",
                "invalid_2_identifiers_separated_by_space",
                "entity",
                "entity_w_entity",
                "entity_w_pair",
                "2_entities",
                "2_entities_w_entities",
                "3_entities_w_pairs",
                "line_comment",
                "line_comment_before_stmt",
                "line_comment_after_stmt",
                "line_comment_between_stmt",
                "multiple_line_comment",
                "line_comment_after_stmt_same_line",
                "comma_separated_pred",
                "comma_separated_pred_w_subj",
                "comma_separated_pred_w_subj_obj",
                "comma_separated_pred_trailing_comma",
                "comma_separated_pred_trailing_comma_newline",
                "comma_separated_pred_trailing_comma_newline_multiline",
                "hierarchy_1_child",
                "hierarchy_2_children",
                "hierarchy_1_child_same_line",
                "hierarchy_2_children_same_line",
                "entity_after_hierarchy",
                "newline_before_scope_open",
                "comment_before_scope_open",
                "comment_after_newline_before_scope_open",
                "hierarchy_2_levels",
                "hierarchy_2_levels_2_subtrees",
                "missing_end_of_scope",
                "missing_end_of_predicate_scope",
                "create_in_scope",
                "hierarchy_w_pred_subj",
                "hierarchy_custom_relation",
                "hierarchy_custom_relation_2_levels",
                "hierarchy_custom_relation_apply_to_object",
                "hierarchy_custom_relation_apply_to_object_2_levels",
                "entity_after_hierarchy_custom_relation",
                "entity_after_hierarchy_custom_relation_2_levels",
                "pred_scope",
                "pred_scope_2_levels",
                "pred_scope_inside_with",
                "pred_scope_nested_w_subj_scope",
                "with_tag",
                "with_tag_2_entities",
                "with_tag_same_line",
                "with_tag_2_entities_same_line",
                "with_tag_2_levels",
                "with_tag_2_levels_2_subtrees",
                "with_n_tags",
                "with_n_tags_2_levels",
                "with_after_scope",
                "with_after_with",
                "scope_inside_with_inside_scope",
                "with_inside_scope",
                "assignment_w_1",
                "assignment_w_2",
                "assignment_w_pair",
                "assignment_w_invalid_subject",
                "assignment_w_invalid_with",
                "inherit_w_colon",
                "inherit_w_colon_w_scope",
                "inherit_w_colon_w_assign",
                "assign_component_value",
                "assign_2_component_values",
                "assign_component_value_in_assign_scope",
                "assign_2_component_values_in_assign_scope",
                "type_and_assign_in_plecs",
                "type_and_assign_in_plecs_w_2_members",
                "type_and_assign_in_plecs_w_3_members",
                "type_and_assign_in_plecs_w_enum",
                "type_and_assign_in_plecs_w_enum_using_meta",
                "type_and_assign_in_plecs_w_enum_primitive_using_meta",
                "type_and_assign_in_plecs_w_enum_primitive_and_struct",
                "type_and_assign_in_plecs_nested_member",
                "open_scope_no_parent",
                "create_subject_in_root_scope_w_resolvable_id",
                "create_subject_in_scope_w_resolvable_id",
                "create_subject_in_scope_w_resolvable_id_using",
                "using_scope",
                "using_nested_scope",
                "using_nested_in_scope",
                "using_with_scope",
                "using_w_entity_ref_in_value_2_members",
                "using_w_entity_ref_in_value_3_members",
                "2_using_scope",
                "2_using_in_different_scope",
                "empty_scope_after_using",
                "assignment_to_non_component",
                "struct_w_member_w_assignment_to_nothing",
                "struct_w_member_w_assignment_to_empty_scope",
                "scope_after_assign",
                "assign_after_inherit",
                "multiple_assignments_single_line",
                "2_stmts_in_scope_w_no_parent",
                "scope_after_assign_1_tag",
                "scope_after_assign_2_tags",
                "invalid_nested_assignment",
                "invalid_partial_pair_assignment",
                "empty_assignment",
                "assign_tag_to_parent",
                "assign_component_to_parent",
                "empty_assignment_before_end_of_scope",
                "assign_to_parent_pair_w_new_entities_in_scope",
                "assign_to_parent_pair_w_existing_entities_in_scope",
                "default_child_component",
                "default_child_component_w_assign",
                "struct_type_w_default_child_component",
                "struct_type_w_default_child_component_nested_member",
                "enum_type_w_default_child_component",
                "comment_as_brief_doc",
                "comment_as_brief_doc_after_using",
                "comment_as_brief_doc_2_stmts",
                "comment_type",
                "empty_doc_comment",
                "newline_after_doc_comment",
                "default_type_from_with",
                "scope_w_1_subj_and_2_pairs",
                "inherit_from_multiple",
                "assign_pair_component",
                "assign_pair_component_in_scope",
                "set_entity_names",
                "oneof",
                "invalid_oneof"
            ]
        }, {
            "id": "Doc",
            "testcases": [
                "get_set_name",
                "get_entity_name",
                "get_set_brief",
                "get_set_detail",
                "get_set_link"
            ]
        }, {
            "id": "Pipeline",
            "setup": true,
            "testcases": [
                "system_order_same_phase",
                "system_order_same_phase_after_disable",
                "system_order_same_phase_after_activate",
                "system_order_different_phase",
                "system_order_different_phase_after_disable",
                "system_order_different_phase_after_activate",
                "system_order_after_new_system_lower_id",
                "system_order_after_new_system_inbetween_id",
                "system_order_after_new_system_higher_id",
                "system_reverse_order_by_phase_custom_pipeline",
                "merge_after_staged_out",
                "merge_after_not_out",
                "no_merge_after_main_out",
                "merge_after_staged_in_out",
                "merge_after_staged_inout_main_implicit_inout",
                "merge_after_staged_inout_main_inout",
                "merge_after_staged_out_before_owned",
                "switch_pipeline",
                "run_pipeline",
                "get_pipeline_from_stage",
                "3_systems_3_types",
                "random_read_after_random_write_out_in",
                "random_read_after_random_write_inout_in",
                "random_read_after_random_write_out_inout",
                "random_read_after_random_write_inout_inout",
                "random_read_after_random_write_w_not_write",
                "random_read_after_random_write_w_not_read",
                "random_read_after_random_write_w_wildcard",
                "random_in_after_random_inout_after_random_out",
                "stage_write_before_read",
                "mixed_multithreaded",
                "mixed_staging",
                "no_staging_system_create_query",
                "single_threaded_pipeline_change",
                "multi_threaded_pipeline_change",
                "activate_after_add",
                "match_all_after_pipeline_rebuild",
                "empty_pipeline"
            ]
        }, {
            "id": "SystemMisc",
            "testcases": [
                "invalid_not_without_id",
                "invalid_optional_without_id",
                "invalid_entity_without_id",
                "invalid_empty_without_id",
                "invalid_empty_element",
                "invalid_empty_element_w_space",
                "invalid_empty_or",
                "invalid_empty_or_w_space",
                "invalid_or_w_not",
                "invalid_not_w_or",
                "invalid_0_w_and",
                "invalid_component_id",
                "invalid_entity_id",
                "invalid_null_string",
                "invalid_empty_string",
                "invalid_empty_string_w_space",
                "invalid_mixed_src_modifier",                
                "redefine_row_system",
                "system_w_or_prefab",
                "system_w_or_disabled",
                "system_w_or_disabled_and_prefab",
                "table_columns_access",
                "status_enable_after_new",
                "status_enable_after_disable",
                "status_disable_after_new",
                "status_disable_after_disable",
                "status_activate_after_new",
                "status_deactivate_after_delete",
                "dont_enable_after_rematch",
                "ensure_single_merge",
                "table_count",
                "match_system",
                "system_initial_state",
                "add_own_component",
                "change_system_action",
                "system_readeactivate",
                "system_readeactivate_w_2_systems",
                "add_to_system_in_progress",
                "redefine_null_signature",
                "redefine_0_signature",
                "one_named_column_of_two",
                "two_named_columns_of_two",
                "redeclare_system_explicit_id",
                "redeclare_system_explicit_id_null_expr",
                "redeclare_system_explicit_id_no_name",
                "declare_different_id_same_name",
                "declare_different_id_same_name_w_scope",
                "rw_in_implicit_any",
                "rw_in_implicit_shared",
                "rw_in_implicit_from_empty",
                "rw_in_implicit_from_entity",
                "rw_out_explicit_any",
                "rw_out_explicit_shared",
                "rw_out_explicit_from_empty",
                "rw_out_explicit_from_entity",
                "activate_system_for_table_w_n_pairs",
                "get_query",
                "set_get_context",
                "set_get_binding_context",
                "deactivate_after_disable",
                "system_w_self",
                "delete_system",
                "delete_pipeline_system",
                "delete_system_w_ctx",
                "run_custom_run_action",
                "run_w_offset_limit_custom_run_action",
                "pipeline_custom_run_action",
                "change_custom_run_action",
                "custom_run_action_call_next"
            ]
        }, {
            "id": "Rules",
            "testcases": [
                "empty_rule",
                "invalid_rule",
                "comp_recycled_final_id",
                "comp_recycled_id",
                "pair_recycled_final_pred",
                "pair_recycled_pred",
                "pair_recycled_obj",
                "pair_recycled_pred_obj",
                "pair_recycled_matched_obj",
                "pair_recycled_matched_obj_2_terms",
                "pair_recycled_matched_pred_2_terms",
                "reflexive_pair_recycled_subj",
                "recycled_var",
                "superset_from_recycled",
                "superset_from_recycled_w_var",
                "superset_from_recycled_2_lvls_w_var",
                "superset_from_recycled_2_lvls_2_tbls_w_var",
                "1_comp",
                "2_comp",
                "1_comp_explicit_subject",
                "2_comp_explicit_subject",
                "1_empty_comp",
                "1_fact_true",
                "1_fact_false",
                "2_facts_true",
                "2_facts_1_false",
                "2_facts_false",
                "1_fact_pair_true",
                "1_fact_pair_false",
                "2_fact_pairs_true",
                "2_fact_pairs_1_false",
                "2_fact_pairs_false",
                "wildcard_pred",
                "wildcard_subj",
                "wildcard_obj",
                "wildcard_pred_pair",
                "any_pred",
                "any_subj",
                "any_obj",
                "2_wildcard_as_subject",
                "find_1_pair",
                "find_2_pairs",
                "find_w_pred_var",
                "find_w_pred_var_explicit_subject",
                "find_1_pair_w_object_var",
                "find_2_pairs_w_object_var",
                "find_1_pair_w_pred_var",
                "find_2_pairs_w_pred_var",
                "find_cyclic_pairs",
                "join_by_object",
                "join_by_predicate",
                "join_by_predicate_from_subject",
                "find_transitive",
                "find_transitive_2_branches",
                "transitive_subsets",
                "transitive_subsets_2_terms",
                "transitive_w_table_object",
                "transitive_supersets",
                "transitive_superset_w_subj_var",
                "transitive_superset_w_subj_var_2_term",
                "transitive_supersets_2_terms",
                "transitive_constraint_on_superset_var",
                "transitive_instances",
                "transitive_instances_2_terms",              
                "transitive_implicit_isa_instances",
                "transitive_implicit_isa_instances_2_terms",
                "transitive_fact_false",
                "transitive_fact_true_depth_1",
                "transitive_fact_true_depth_2",
                "transitive_fact_true_depth_3",
                "transitive_fact_true_depth_4",
                "transitive_fact_true_depth_5",
                "transitive_fact_true_2_relationships",
                "transitive_fact_same_subj_obj",
                "transitive_fact_subset_superset",
                "transitive_nonfinal_fact",
                "transitive_nonfinal_fact_w_implicit_pred_subset",
                "transitive_all",
                "same_pred_obj",
                "same_pred_obj_explicit_subject",
                "implicit_is_a_tag_fact",
                "implicit_is_a_tag_fact_2_lvls",
                "implicit_is_a_tag_fact_3_lvls",
                "implicit_is_a_tag_fact_2_lvls_both_matching",
                "implicit_is_a_tag_fact_2_lvls_entity_matching",
                "implicit_is_a_pair_fact",
                "implicit_is_a_pair_2_lvls",
                "implicit_is_a_pair_3_lvls",
                "implicit_is_a_pair_2_lvls_both_matching",
                "implicit_is_a_pair_2_lvls_entity_matching",
                "implicit_is_a_pred_var",
                "implicit_is_a_pair_var",
                "implicit_is_a_transitive_pair_fact",
                "implicit_is_a_transitive_pair_fact_w_implicit_pred_subset",
                "implicit_is_a_transitive_pair_fact_w_implicit_pred_obj",
                "2_constrained_vars_by_subject_literal",
                "2_constrained_vars_by_subject_literal_2_var_terms",
                "term_w_nothing_set",
                "term_w_nothing_set_w_this_term",
                "comp_w_not_term",
                "not_term_w_subj_var",
                "not_term_w_subj_var_match_n_per_type",
                "invalid_rule_w_only_not_term",
                "invalid_rule_w_not_term_unknown_var",
                "invalid_rule_w_not_term_unknown_pair_var",
                "invalid_rule_w_not_term_unknown_pair_var_subj_var",
                "rules_w_desc_id",
                "rules_w_desc_pair",
                "rules_w_desc_pair_empty_rel_obj",
                "rules_w_desc_pair_pred_obj",
                "rules_w_desc_wildcard",
                "childof_0",
                "childof_this",
                "childof_this_as_identifier",
                "optional_term",
                "optional_term_w_component",
                "optional_term_on_entity",
                "optional_term_on_variable",
                "optional_term_on_wildcard",
                "optional_term_on_relation_this_obj",
                "optional_w_subj_var",
                "optional_w_obj_var",
                "terms_set",
                "value_set",
                "term_w_this_this_this",
                "term_w_x_x_x",
                "term_w_same_subj_obj_var",
                "filter_term",
                "2_terms_1_filter",
                "3_terms_2_filter",
                "term_obj_w_this",
                "term_subj_w_this",
                "rule_iter_frame_offset",
                "rule_iter_set_var",
                "rule_iter_set_2_vars",
                "rule_iter_set_pred_var",
                "rule_iter_set_var_for_2_terms",
                "rule_iter_set_cyclic_variable",
                "rule_iter_set_cyclic_variable_w_this",
                "optional_any_object",
                "optional_any_subject",
                "test_subj_w_wildcard_w_pairs",
                "test_subj_w_wildcard_wildcard_w_pairs",
                "test_this_w_wildcard_w_pairs",
                "test_this_w_wildcard_wildcard_w_pairs",
                "test_subj_w_wildcard_w_pairs_var",
                "test_subj_w_wildcard_wildcard_w_pairs_var",
                "test_this_w_wildcard_w_pairs_var",
                "test_this_w_wildcard_wildcard_w_pairs_var",
                "test_this_w_wildcard_no_match",
                "test_this_w_pair_wildcard_no_match",
                "test_subj_w_wildcard_w_isa",
                "test_subj_w_wildcard_w_isa_2_lvls",
                "test_subj_w_pair_wildcard_w_isa",
                "test_subj_w_pair_wildcard_w_isa_2_lvls",
                "test_this_w_wildcard_w_isa",
                "test_this_w_wildcard_w_isa_2_lvls",
                "test_this_w_wildcard_w_2_isa",
                "rule_w_inout_filter",
                "variable_order",
                "table_subj_as_obj_in_not",
                "invalid_variable_only"
            ]
        }, {
            "id": "TransitiveRules",
            "testcases": [
                "trans_X_X",
                "trans_reflexive_X_X",
                "trans_reflexive_X_X_2",
                "trans_reflexive_X_Y",
                "trans_X_Y_2_levels",
                "trans_X_Y_2_levels_nonfinal",
                "trans_pred_This_X__pred_X",
                "trans_constrained_x_y",
                "trans_entity_X_non_inclusive",
                "trans_X_entity_non_inclusive",
                "trans_entity_entity_non_reflexive",
                "trans_this_x_after_tag_this",
                "trans_this_x_before_tag_this",
                "trans_this_x_after_tag_this_2_lvls",
                "trans_this_x_before_tag_this_2_lvls",
                "transitive_not_w_var",
                "transitive_w_not_nonfinal",
                "transitive_w_optional_nonfinal",
                "transitive_w_optional_nonfinal_w_var",
                "rule_iter_set_transitive_variable",
                "rule_iter_set_transitive_self_variable",
                "rule_iter_set_transitive_2_variables_set_one",
                "rule_iter_set_transitive_2_variables_set_both",
                "rule_iter_set_transitive_self_2_variables_set_both"
            ]
        }, {
            "id": "SystemPeriodic",
            "testcases": [
                "1_type_1_component",
                "1_type_3_component",
                "3_type_1_component",
                "2_type_3_component",
                "1_type_1_component_1_tag",
                "2_type_1_component_1_tag",
                "2_type_1_and_1_not",
                "2_type_2_and_1_not",
                "2_type_2_and_2_not",
                "4_type_1_and_1_or",
                "4_type_1_and_1_or_of_3",
                "1_type_1_and_1_or",
                "2_type_1_and_1_optional",
                "2_type_2_and_1_optional",
                "6_type_1_and_2_optional",
                "ensure_optional_is_unset_column",
                "ensure_optional_is_null_shared",
                "match_2_systems_w_populated_table",
                "on_period",
                "on_period_long_delta",
                "disabled",
                "disabled_feature",
                "disabled_nested_feature",
                "two_refs",
                "filter_disabled",
                "match_disabled",
                "match_disabled_and_enabled",
                "match_prefab",
                "match_prefab_and_normal",
                "is_shared_on_column_not_set",
                "owned_column",
                "owned_not_column",
                "owned_or_column",
                "shared_column",
                "shared_not_column",
                "shared_or_column",
                "container_dont_match_inheritance",
                "cascade_dont_match_inheritance",
                "not_from_entity",
                "sys_context",
                "get_sys_context_from_param",
                "owned_only",
                "shared_only",
                "is_in_readonly",
                "get_period",
                "and_type",
                "or_type"
            ]
        }, {
            "id": "Timer",
            "testcases": [
                "timeout",
                "interval",
                "shared_timeout",
                "shared_interval",
                "start_stop_one_shot",
                "start_stop_interval",
                "rate_filter",
                "rate_filter_w_rate_filter_src",
                "rate_filter_w_timer_src",
                "rate_filter_with_empty_src",
                "one_shot_timer_entity",
                "interval_timer_entity",
                "rate_entity",
                "nested_rate_entity",
                "nested_rate_entity_empty_src",
                "naked_tick_entity"
            ]
        }, {
            "id": "SystemCascade",
            "testcases": [
                "cascade_depth_1",
                "cascade_depth_2",
                "cascade_depth_2_new_syntax",
                "add_after_match",
                "adopt_after_match",
                "query_w_only_cascade",
                "custom_relation_cascade_depth_1",
                "custom_relation_cascade_depth_2",
                "custom_relation_add_after_match",
                "custom_relation_adopt_after_match"
            ]
        }, {
            "id": "SystemManual",
            "setup": true,
            "testcases": [
                "1_type_1_component",
                "activate_status",
                "no_automerge",
                "dont_run_w_unmatching_entity_query"
            ]
        }, {
            "id": "Tasks",
            "testcases": [
                "no_components",
                "one_tag",
                "from_system",
                "tasks_in_phases"
            ]
        }, {
            "id": "System_w_FromParent",
            "setup": true,
            "testcases": [
                "1_column_from_container",
                "2_column_1_from_container",
                "3_column_2_from_container",
                "2_column_1_from_container_w_not",
                "2_column_1_from_container_w_not_prefab",
                "3_column_1_from_comtainer_1_from_container_w_not",
                "2_column_1_from_container_w_or",
                "select_same_from_container",
                "add_component_after_match",
                "add_component_after_match_and_rematch",
                "add_component_after_match_unmatch",
                "add_component_after_match_unmatch_match",
                "add_component_after_match_2_systems",
                "add_component_in_progress_after_match",
                "add_component_after_match_and_rematch_w_entity_type_expr",
                "add_component_after_match_and_rematch_w_entity_type_expr_in_progress",
                "adopt_after_match",
                "new_child_after_match",
                "realloc_after_match"
            ]
        }, {
            "id": "System_w_Empty",
            "testcases": [
                "2_column_1_from_id",
                "3_column_2_from_id",
                "column_type"
            ]
        }, {
            "id": "System_w_FromSystem",
            "testcases": [
                "2_column_1_from_system",
                "3_column_2_from_system",
                "auto_add_tag"
            ]
        }, {
            "id": "System_w_FromEntity",
            "testcases": [
                "2_column_1_from_entity",
                "task_from_entity",
                "task_not_from_entity"
            ]
        }, {
            "id": "Stats",
            "testcases": [
                "get_world_stats",
                "get_pipeline_stats_before_progress_mini_world",
                "get_pipeline_stats_before_progress",
                "get_pipeline_stats_after_progress_no_systems",
                "get_pipeline_stats_after_progress_1_system",
                "get_pipeline_stats_after_progress_1_inactive_system",
                "get_pipeline_stats_after_progress_2_systems",
                "get_pipeline_stats_after_progress_2_systems_one_merge",
                "get_entity_count",
                "get_not_alive_entity_count"
            ]
        }, {
            "id": "Run",
            "setup": true,
            "testcases": [
                "run",
                "run_w_param",
                "run_no_match",
                "run_w_offset",
                "run_w_offset_skip_1_archetype",
                "run_w_offset_skip_1_archetype_plus_one",
                "run_w_offset_skip_2_archetypes",
                "run_w_limit_skip_1_archetype",
                "run_w_limit_skip_1_archetype_minus_one",
                "run_w_limit_skip_2_archetypes",
                "run_w_offset_1_limit_max",
                "run_w_offset_1_limit_minus_1",
                "run_w_offset_2_type_limit_max",
                "run_w_offset_2_type_limit_minus_1",
                "run_w_limit_1_all_offsets",
                "run_w_offset_out_of_bounds",
                "run_w_limit_out_of_bounds",
                "run_comb_10_entities_1_type",
                "run_comb_10_entities_2_types",
                "run_w_interrupt",
                "run_staging"
            ]
        }, {
            "id": "MultiThread",
            "setup": true,
            "testcases": [
                "2_thread_1_entity",
                "2_thread_2_entity",
                "2_thread_5_entity",
                "2_thread_10_entity",
                "3_thread_1_entity",
                "3_thread_2_entity",
                "3_thread_5_entity",
                "3_thread_10_entity",
                "4_thread_1_entity",
                "4_thread_2_entity",
                "4_thread_5_entity",
                "4_thread_10_entity",
                "5_thread_1_entity",
                "5_thread_2_entity",
                "5_thread_5_entity",
                "5_thread_10_entity",
                "6_thread_1_entity",
                "6_thread_2_entity",
                "6_thread_5_entity",
                "6_thread_10_entity",
                "2_thread_1_entity_instanced",
                "2_thread_5_entity_instanced",
                "2_thread_10_entity_instanced",
                "2_thread_test_combs_100_entity_w_next_worker",
                "2_thread_test_combs_100_entity",
                "3_thread_test_combs_100_entity",
                "4_thread_test_combs_100_entity",
                "5_thread_test_combs_100_entity",
                "6_thread_test_combs_100_entity",
                "2_thread_test_combs_100_entity_2_types",
                "3_thread_test_combs_100_entity_2_types",
                "4_thread_test_combs_100_entity_2_types",
                "5_thread_test_combs_100_entity_2_types",
                "6_thread_test_combs_100_entity_2_types",
                "change_thread_count",
                "multithread_quit",
                "schedule_w_tasks",
                "reactive_system",
                "fini_after_set_threads",
                "2_threads_single_threaded_system"
            ]
        }, {
            "id": "MultiThreadStaging",
            "setup": true,
            "testcases": [
                "2_threads_add_to_current",
                "3_threads_add_to_current",
                "4_threads_add_to_current",
                "5_threads_add_to_current",
                "6_threads_add_to_current",
                "2_threads_on_add",
                "new_w_count",
                "custom_thread_auto_merge",
                "custom_thread_manual_merge",
                "custom_thread_partial_manual_merge"
            ]
        }, {
            "id": "Snapshot",
            "testcases": [
                "simple_snapshot",
                "snapshot_after_new",
                "snapshot_after_delete",
                "snapshot_after_new_type",
                "snapshot_after_add",
                "snapshot_after_remove",
                "snapshot_w_include_filter",
                "snapshot_w_exclude_filter",
                "snapshot_w_filter_after_new",
                "snapshot_w_filter_after_delete",
                "snapshot_free_empty",
                "snapshot_free",
                "snapshot_free_filtered",
                "snapshot_free_filtered_w_dtor",
                "snapshot_activate_table_w_filter",
                "snapshot_copy",
                "snapshot_get_ref_after_restore",
                "new_after_snapshot",
                "new_empty_after_snapshot",
                "add_after_snapshot",
                "delete_after_snapshot",
                "set_after_snapshot",
                "restore_recycled",
                "snapshot_w_new_in_onset",
                "snapshot_w_new_in_onset_in_snapshot_table",
                "snapshot_from_stage"
            ]
        }, {
            "id": "Modules",
            "setup": true,
            "testcases": [
                "simple_module",
                "import_module_from_system",
                "import_again",
                "scoped_component",
                "scoped_tag",
                "scoped_system",
                "scoped_entity",
                "name_prefix_component",
                "name_prefix_tag",
                "name_prefix_system",
                "name_prefix_entity",
                "name_prefix_prefab",
                "name_prefix_pipeline",
                "name_prefix_trigger",
                "name_prefix_underscore",
                "lookup_by_symbol",
                "nested_module",
                "module_tag_on_namespace",
                "module_tag_on_namespace_on_add",
                "module_tag_on_namespace_on_add_2_levels"
            ]
        }, {
            "id": "App",
            "testcases": [
                "app_w_frame_action",
                "app_w_default_frame_action"
            ]
        }, {
            "id": "Http",
            "testcases": [
                "teardown",
                "teardown_started",
                "teardown_stopped",
                "stop_start",
                "stop_start_stresstest",
                "stop_start_stresstest_w_0_sleep",
                "stop_start_stresstest_w_100ns_sleep",
                "stop_start_stresstest_w_100us_sleep",
                "stop_start_stresstest_w_10ms_sleep"
            ]
        }, {
            "id": "Rest",
            "testcases": [
                "teardown"
            ]
        }]
    }
}
