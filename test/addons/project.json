{
    "id": "addons",
    "type": "application",
    "value": {
        "author": "Sander Mertens",
        "description": "Test project for flecs addons",
        "public": false,
        "use": [
            "flecs"
        ]
    },
    "test": {
        "testsuites": [{
            "id": "Doc",
            "testcases": [
                "get_set_name",
                "get_entity_name",
                "get_set_brief",
                "get_set_detail",
                "get_set_link",
                "set_name_nullptr",
                "set_brief_nullptr",
                "set_detail_nullptr",
                "set_link_nullptr",
                "set_color_nullptr"
            ]
        }, {
            "id": "Pipeline",
            "testcases": [
                "system_order_same_phase",
                "system_order_same_phase_after_disable",
                "system_order_same_phase_after_activate",
                "system_order_different_phase",
                "system_order_different_phase_after_disable",
                "system_order_different_phase_after_activate",
                "system_order_after_new_system_lower_id",
                "system_order_after_new_system_inbetween_id",
                "system_order_after_new_system_higher_id",
                "system_reverse_order_by_phase_custom_pipeline",
                "merge_after_staged_out",
                "merge_after_not_out",
                "no_merge_after_main_out",
                "merge_after_staged_in_out",
                "merge_after_staged_inout_main_implicit_inout",
                "merge_after_staged_inout_main_inout",
                "merge_after_staged_out_before_owned",
                "switch_pipeline",
                "run_pipeline",
                "get_pipeline_from_stage",
                "3_systems_3_types",
                "random_read_after_random_write_out_in",
                "random_read_after_random_write_inout_in",
                "random_read_after_random_write_out_inout",
                "random_read_after_random_write_inout_inout",
                "random_read_after_random_write_w_not_write",
                "random_read_after_random_write_w_not_read",
                "random_read_after_random_write_w_wildcard",
                "random_in_after_random_inout_after_random_out",
                "stage_write_before_read",
                "mixed_multithreaded",
		        "mixed_multithreaded_tasks",
                "mixed_staging",
                "no_staging_system_create_query",
                "single_threaded_pipeline_change",
                "multi_threaded_pipeline_change",
                "multi_threaded_pipeline_change_tasks",
                "activate_after_add",
                "match_all_after_pipeline_rebuild",
                "empty_pipeline",
                "custom_pipeline_w_system_macro",
                "pipeline_w_short_notation",
                "stack_allocator_after_progress",
                "stack_allocator_after_progress_w_pipeline_change",
                "iter_from_world_in_singlethread_system_multitead_app",
		        "iter_from_world_in_singlethread_system_multitead_app_tasks",
                "no_staging_after_inactive_system",
                "inactive_system_after_no_staging_system_no_defer_w_filter",
                "inactive_system_after_2_no_staging_system_no_defer_w_filter",
                "inactive_system_after_no_staging_system_no_defer_w_filter_w_no_staging_at_end",
                "inactive_multithread_system_after_no_staging_system_no_defer",
		        "inactive_multithread_tasks_system_after_no_staging_system_no_defer",
                "inactive_multithread_system_after_no_staging_system_no_defer_w_no_staging_at_end",
                "inactive_multithread_tasks_system_after_no_staging_system_no_defer_w_no_staging_at_end",
                "multi_threaded_pipeline_change_w_only_singlethreaded",
                "multi_threaded_tasks_pipeline_change_w_only_singlethreaded",
                "sync_after_not_out_for_out",
                "pair_wildcard_read_after_staged_write",
                "pair_read_after_staged_wildcard_write",
                "no_sync_after_pair_wildcard_read_after_unmatching_staged_write",
                "no_merge_after_from_nothing_w_default_inout",
                "on_merge_activate_system_before_merge",
                "disable_phase",
                "disable_parent",
                "multi_threaded_no_staging_w_add_after_read",
                "multi_threaded_tasks_no_staging_w_add_after_read",
                "1_startup_system",
                "2_startup_systems",
                "2_startup_phases",
                "2_startup_systems_w_merge",
                "inactive_last_system_merge_count",
                "inactive_middle_system_merge_count",
                "last_no_readonly_system_merge_count",
                "2_pipelines_1_system",
                "builtin_pipeline_w_self_system_term",
                "custom_pipeline_w_self_system_term",
                "switch_from_threads_to_tasks",
                "switch_from_tasks_to_threads",
                "run_pipeline_multithreaded",
                "run_pipeline_multithreaded_tasks",
                "pipeline_init_no_terms",
                "pipeline_init_no_system_term",
                "disable_component_from_immediate_system",
                "run_w_empty_query",
                "run_w_0_src_query"
            ]
        }, {
            "id": "SystemMisc",
            "testcases": [
                "invalid_not_without_id",
                "invalid_optional_without_id",
                "invalid_entity_without_id",
                "invalid_empty_element",
                "invalid_empty_element_w_space",
                "invalid_empty_or",
                "invalid_empty_or_w_space",
                "invalid_or_w_not",
                "invalid_not_w_or",
                "invalid_0_w_and",
                "invalid_0_w_from_entity",
                "invalid_component_id",
                "invalid_entity_id",
                "invalid_null_string",
                "invalid_empty_string",
                "invalid_empty_string_w_space",
                "redefine_row_system",
                "system_w_or_prefab",
                "system_w_or_disabled",
                "system_w_or_disabled_and_prefab",
                "table_columns_access",
                "dont_enable_after_rematch",
                "ensure_single_merge",
                "match_system",
                "system_initial_state",
                "add_own_component",
                "change_system_action",
                "system_readeactivate",
                "system_readeactivate_w_2_systems",
                "add_to_system_in_progress",
                "redefine_null_signature",
                "redefine_0_signature",
                "redeclare_system_explicit_id",
                "redeclare_system_explicit_id_null_expr",
                "redeclare_system_explicit_id_no_name",
                "declare_different_id_same_name",
                "declare_different_id_same_name_w_scope",
                "rw_in_implicit_any",
                "rw_in_implicit_shared",
                "rw_in_implicit_from_empty",
                "rw_in_implicit_from_entity",
                "rw_out_explicit_any",
                "rw_out_explicit_shared",
                "rw_out_explicit_from_empty",
                "rw_out_explicit_from_entity",
                "activate_system_for_table_w_n_pairs",
                "get_query",
                "set_get_context",
                "set_get_binding_context",
                "deactivate_after_disable",
                "delete_system",
                "delete_pipeline_system",
                "delete_system_w_ctx",
                "update_ctx",
                "run_custom_run_action",
                "pipeline_custom_run_action",
                "change_custom_run_action",
                "custom_run_action_call_next",
                "system_w_short_notation",
                "update_interval_w_system_init",
                "update_rate_w_system_init",
                "system_w_interval_rate_stop_timer",
                "system_w_rate_filter_self",
                "system_same_interval_same_tick",
                "system_no_id_in_scope",
                "register_callback_after_run",
                "register_run_after_callback",
                "register_callback_after_run_ctx",
                "register_run_after_callback_ctx"
            ]
        }, {
            "id": "SystemPeriodic",
            "testcases": [
                "1_type_1_component",
                "1_type_3_component",
                "3_type_1_component",
                "2_type_3_component",
                "1_type_1_component_1_tag",
                "2_type_1_component_1_tag",
                "2_type_1_and_1_not",
                "2_type_2_and_1_not",
                "2_type_2_and_2_not",
                "4_type_1_and_1_or",
                "4_type_1_and_1_or_of_3",
                "1_type_1_and_1_or",
                "2_type_1_and_1_optional",
                "2_type_2_and_1_optional",
                "6_type_1_and_2_optional",
                "ensure_optional_is_unset_column",
                "ensure_optional_is_null_shared",
                "match_2_systems_w_populated_table",
                "on_period",
                "on_period_long_delta",
                "disabled",
                "disabled_feature",
                "disabled_nested_feature",
                "two_refs",
                "filter_disabled",
                "match_disabled",
                "match_disabled_and_enabled",
                "match_prefab",
                "match_prefab_and_normal",
                "is_shared_on_column_not_set",
                "owned_column",
                "owned_not_column",
                "owned_or_column",
                "shared_column",
                "shared_not_column",
                "shared_or_column",
                "container_dont_match_inheritance",
                "cascade_dont_match_inheritance",
                "not_from_entity",
                "sys_context",
                "get_sys_context_from_param",
                "owned_only",
                "shared_only",
                "is_in_readonly",
                "get_period",
                "and_type",
                "or_type"
            ]
        }, {
            "id": "Timer",
            "testcases": [
                "timeout",
                "interval",
                "shared_timeout",
                "shared_interval",
                "start_stop_one_shot",
                "start_stop_interval",
                "rate_filter",
                "rate_filter_w_rate_filter_src",
                "rate_filter_w_timer_src",
                "rate_filter_with_empty_src",
                "one_shot_timer_entity",
                "interval_timer_entity",
                "rate_entity",
                "nested_rate_entity",
                "nested_rate_entity_empty_src",
                "naked_tick_entity",
                "stop_timer_w_rate",
                "stop_timer_w_rate_same_src",
                "randomize_timers"
            ]
        }, {
            "id": "SystemCascade",
            "testcases": [
                "cascade_depth_1",
                "cascade_depth_2",
                "cascade_depth_2_new_syntax",
                "add_after_match",
                "adopt_after_match",
                "custom_relation_cascade_depth_1",
                "custom_relation_cascade_depth_2",
                "custom_relation_add_after_match",
                "custom_relation_adopt_after_match"
            ]
        }, {
            "id": "SystemManual",
            "setup": true,
            "testcases": [
                "1_type_1_component",
                "dont_run_w_unmatching_entity_query"
            ]
        }, {
            "id": "Tasks",
            "testcases": [
                "no_components",
                "one_tag",
                "from_system",
                "tasks_in_phases"
            ]
        }, {
            "id": "System_w_FromParent",
            "setup": true,
            "testcases": [
                "1_column_from_container",
                "2_column_1_from_container",
                "3_column_2_from_container",
                "2_column_1_from_container_w_not",
                "2_column_1_from_container_w_not_prefab",
                "3_column_1_from_container_1_from_container_w_not",
                "2_column_1_from_container_w_or",
                "select_same_from_container",
                "add_component_after_match",
                "add_component_after_match_and_rematch",
                "add_component_after_match_unmatch",
                "add_component_after_match_unmatch_match",
                "add_component_after_match_2_systems",
                "add_component_in_progress_after_match",
                "add_component_after_match_and_rematch_w_entity_type_expr",
                "add_component_after_match_and_rematch_w_entity_type_expr_in_progress",
                "adopt_after_match",
                "new_child_after_match",
                "realloc_after_match"
            ]
        }, {
            "id": "System_w_Empty",
            "testcases": [
                "2_column_1_from_id",
                "3_column_2_from_id",
                "column_type"
            ]
        }, {
            "id": "System_w_FromSystem",
            "testcases": [
                "2_column_1_from_system",
                "3_column_2_from_system",
                "auto_add_tag"
            ]
        }, {
            "id": "System_w_FromEntity",
            "testcases": [
                "2_column_1_from_entity",
                "task_from_entity",
                "task_not_from_entity"
            ]
        }, {
            "id": "Stats",
            "testcases": [
                "get_world_stats",
                "get_pipeline_stats_before_progress_mini_world",
                "get_pipeline_stats_before_progress",
                "get_pipeline_stats_after_progress_no_systems",
                "get_pipeline_stats_after_progress_1_system",
                "get_pipeline_stats_after_progress_1_inactive_system",
                "get_pipeline_stats_after_progress_2_systems",
                "get_pipeline_stats_after_progress_2_systems_one_merge",
                "get_entity_count",
                "get_pipeline_stats_w_task_system",
                "get_not_alive_entity_count",
                "progress_stats_systems",
                "progress_stats_systems_w_empty_table_flag"
            ]
        }, {
            "id": "Run",
            "setup": true,
            "testcases": [
                "run",
                "run_w_param",
                "run_no_match",
                "run_w_interrupt",
                "run_staging"
            ]
        }, {
            "id": "MultiThread",
            "setup": true,
            "params": {
                "worker_kind": ["thread", "task"]
            },
            "testcases": [
                "2_thread_1_entity",
                "2_thread_2_entity",
                "2_thread_5_entity",
                "2_thread_10_entity",
                "3_thread_1_entity",
                "3_thread_2_entity",
                "3_thread_5_entity",
                "3_thread_10_entity",
                "4_thread_1_entity",
                "4_thread_2_entity",
                "4_thread_5_entity",
                "4_thread_10_entity",
                "5_thread_1_entity",
                "5_thread_2_entity",
                "5_thread_5_entity",
                "5_thread_10_entity",
                "6_thread_1_entity",
                "6_thread_2_entity",
                "6_thread_5_entity",
                "6_thread_10_entity",
                "2_thread_1_entity_instanced",
                "2_thread_5_entity_instanced",
                "2_thread_10_entity_instanced",
                "2_thread_test_combs_100_entity_w_next_worker",
                "2_thread_test_combs_100_entity",
                "3_thread_test_combs_100_entity",
                "4_thread_test_combs_100_entity",
                "5_thread_test_combs_100_entity",
                "6_thread_test_combs_100_entity",
                "2_thread_test_combs_100_entity_2_types",
                "3_thread_test_combs_100_entity_2_types",
                "4_thread_test_combs_100_entity_2_types",
                "5_thread_test_combs_100_entity_2_types",
                "6_thread_test_combs_100_entity_2_types",
                "change_thread_count",
                "multithread_quit",
                "schedule_w_tasks",
                "reactive_system",
                "fini_after_set_threads",
                "2_threads_single_threaded_system",
                "no_staging_w_multithread",
                "multithread_w_monitor_addon",
                "get_ctx",
                "get_binding_ctx",
                "get_ctx_w_run",
                "get_binding_ctx_w_run",
                "bulk_new_in_no_readonly_w_multithread",
                "bulk_new_in_no_readonly_w_multithread_2",
                "run_first_worker_on_main",
                "run_single_thread_on_main"
            ]
        }, {
            "id": "MultiThreadStaging",
            "setup": true,
            "params": {
                "worker_kind": ["thread", "task"]
            },
            "testcases": [
                "2_threads_add_to_current",
                "3_threads_add_to_current",
                "4_threads_add_to_current",
                "5_threads_add_to_current",
                "6_threads_add_to_current",
                "2_threads_on_add",
                "new_w_count",
                "custom_thread_auto_merge",
                "set_pair_w_new_target_readonly",
                "set_pair_w_new_target_tgt_component_readonly",
                "set_pair_w_new_target_defer",
                "set_pair_w_new_target_tgt_component_defer"
            ]
        }, {
            "id": "Modules",
            "setup": true,
            "testcases": [
                "simple_module",
                "import_module_from_system",
                "import_again",
                "scoped_component",
                "scoped_tag",
                "scoped_system",
                "scoped_entity",
                "name_prefix_component",
                "name_prefix_tag",
                "name_prefix_system",
                "name_prefix_entity",
                "name_prefix_prefab",
                "name_prefix_pipeline",
                "name_prefix_trigger",
                "name_prefix_underscore",
                "lookup_by_symbol",
                "nested_module",
                "module_tag_on_namespace",
                "module_tag_on_namespace_on_add",
                "module_tag_on_namespace_on_add_2_levels",
                "import_monitor_2_worlds",
                "import_monitor_after_mini",
                "import_2_worlds",
                "component_parent_becomes_module"
            ]
        }, {
            "id": "App",
            "testcases": [
                "app_w_frame_action",
                "app_w_default_frame_action",
                "app_w_set_threads",
                "app_w_set_task_threads",
                "app_w_set_target_fps",
                "app_w_set_frames"
            ]
        }, {
            "id": "Http",
            "testcases": [
                "teardown",
                "teardown_started",
                "teardown_stopped",
                "stop_start"
            ]
        }, {
            "id": "Rest",
            "testcases": [
                "teardown",
                "get",
                "get_cached",
                "get_cached_invalid",
                "try_query",
                "query",
                "named_query",
                "tables",
                "request_commands",
                "request_commands_2_syncs",
                "request_commands_no_frames",
                "request_commands_no_commands",
                "request_commands_garbage_collect",
                "script_error",
                "import_rest_after_mini",
                "get_pipeline_stats_after_delete_system",
                "request_world_summary_before_monitor_sys_run",
                "escape_backslash"
            ]
        }, {
            "id": "Metrics",
            "testcases": [
                "member_gauge_1_entity",
                "member_gauge_2_entities",
                "member_gauge_2_entities_1_existing",
                "member_gauge_2_entities_update",
                "member_gauge_w_remove",
                "member_gauge_w_clear",
                "member_gauge_w_delete",
                "id_gauge_1_entity",
                "id_gauge_2_entities",
                "id_gauge_2_entities_1_existing",
                "id_gauge_w_remove",
                "id_gauge_w_clear",
                "id_gauge_w_delete",
                "oneof_gauge_3_entities",
                "oneof_gauge_3_entities_1_existing",
                "oneof_gauge_w_remove",
                "oneof_gauge_w_clear",
                "oneof_gauge_w_delete",
                "oneof_to_snake_case",
                "member_counter",
                "member_auto_counter",
                "id_counter",
                "oneof_counter",
                "metric_description",
                "id_count",
                "id_target_count",
                "metric_instance_has_doc_name",
                "metric_nested_member",
                "metric_nested_member_counter",
                "metric_nested_member_counter_increment",
                "id_w_member_same_type",
                "id_w_member_mismatching_type",
                "pair_member_rel_type",
                "pair_member_tgt_type",
                "pair_dotmember_rel_type",
                "pair_dotmember_tgt_type",
                "pair_member_counter_increment"
            ]
        }, {
            "id": "Alerts",
            "testcases": [
                "one_active_alert",
                "two_active_alerts",
                "alert_message",
                "alert_message_w_this_var",
                "alert_message_w_var",
                "alert_message_w_changed_var",
                "set_doc_name",
                "set_brief",
                "alert_instance_has_doc_name",
                "reraise_alert",
                "info_severity",
                "warning_severity",
                "error_severity",
                "expire_after_retain",
                "revive_w_retain",
                "severity_filter",
                "two_severity_filters",
                "severity_filter_w_var",
                "severity_filter_w_var_change_var",
                "member_range_warning",
                "member_range_error",
                "member_range_warning_error",
                "member_range_error_w_warning_severity",
                "member_range_error_w_severity_filter",
                "member_range_warning_w_severity_filter",
                "member_range_pair_id",
                "member_range_invalid_member",
                "member_range_invalid_member_child",
                "member_range_invalid_type",
                "member_range_invalid_member_type",
                "member_range_no_range",
                "member_range_alert_two_instances",
                "member_range_from_var",
                "member_range_from_var_after_remove",
                "retained_alert_w_dead_source",
                "alert_counts"
            ]
        }]
    }
}
