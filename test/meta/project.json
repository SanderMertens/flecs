{
    "id": "meta",
    "type": "application",
    "value": {
        "author": "Sander Mertens",
        "description": "Test project for flecs.meta",
        "public": false,
        "coverage": false,
        "use": [
            "flecs"
        ]
    },
    "test": {
        "testsuites": [{
            "id": "PrimitiveTypes",
            "testcases": [
                "bool",
                "byte",
                "char",
                "i8",
                "i16",
                "i32",
                "i64",
                "iptr",
                "u8",
                "u16",
                "u32",
                "u64",
                "uptr",
                "float",
                "double",
                "string",
                "entity",
                "builtin_bool",
                "builtin_byte",
                "builtin_char",
                "builtin_i8",
                "builtin_i16",
                "builtin_i32",
                "builtin_i64",
                "builtin_iptr",
                "builtin_u8",
                "builtin_u16",
                "builtin_u32",
                "builtin_u64",
                "builtin_uptr",
                "builtin_float",
                "builtin_double",
                "builtin_string",
                "builtin_entity",
                "struct_w_bool",
                "struct_w_byte",
                "struct_w_char",
                "struct_w_i8",
                "struct_w_i16",
                "struct_w_i32",
                "struct_w_i64",
                "struct_w_iptr",
                "struct_w_u8",
                "struct_w_u16",
                "struct_w_u32",
                "struct_w_u64",
                "struct_w_uptr",
                "struct_w_float",
                "struct_w_double",
                "struct_w_string",
                "struct_w_entity"
            ]
        }, {
            "id": "EnumTypes",
            "testcases": [
                "enum_1_constant",
                "enum_2_constants",
                "enum_3_constants",
                "enum_3_constants_manual_values",
                "struct_w_enum"
            ]
        }, {
            "id": "BitmaskTypes",
            "testcases": [
                "bitmask_1_constant",
                "bitmask_2_constants",
                "bitmask_3_constants",
                "bitmask_4_constants",
                "bitmask_4_constants_manual_values",
                "struct_w_bitmask"
            ]
        }, {
            "id": "StructTypes",
            "testcases": [
                "i32",
                "i32_i32",
                "i32_i32_i32",
                "bool_i32",
                "bool_bool_i32",
                "bool_i32_bool_i32",
                "i32_bool",
                "i32_bool_bool",
                "i32_bool_bool_bool",
                "i32_i64",
                "i32_i64_i32"
            ]
        }, {
            "id": "NestedStructTypes",
            "testcases": [
                "1_bool",
                "1_int32",
                "1_bool_w_bool_member",
                "1_bool_w_int32_member",
                "1_int32_w_bool_member",
                "1_int32_w_int32_member",
                "1_bool_2_same",
                "1_bool_2_bool",
                "1_bool_2_i32",
                "1_i32_2_bool",
                "1_bool_2_bool_bool",
                "1_bool_bool_2_bool",
                "1_bool_bool_2_same",
                "1_bool_bool_2_bool_bool",
                "1_i32_2_same",
                "1_i32_2_i32",
                "1_i32_2_i32_i32",
                "1_i32_i32_2_i32",
                "1_i32_i32_2_same",
                "1_i32_i32_2_i32_i32",
                "2_lvls_bool",
                "2_lvls_bool_bool"
            ]
        }, {
            "id": "ArrayTypes",
            "testcases": [
                "array_bool_1",
                "array_bool_2",
                "array_bool_3",
                "array_bool_1_before_i32_member",
                "array_bool_2_before_i32_member",
                "array_bool_3_before_i32_member",
                "array_i32_3",
                "array_i32_3_before_i32_member",
                "array_struct_bool_3",
                "array_struct_bool_3_before_i32_member",
                "array_struct_array_bool_3",
                "2_arrays_1_bool_1_i32",
                "2_arrays_1_i32_1_bool",
                "2_arrays_1_i32_1_bool",
                "8_arrays_bool_w_padded_member",
                "standaline_array_bool_1",
                "standaline_array_bool_2",
                "standaline_array_bool_3",
                "array_of_standaline_array_bool_1",
                "array_of_standaline_array_bool_2",
                "array_of_standaline_array_bool_3"
            ]
        }, {
            "id": "VectorTypes",
            "testcases": [
                "vector_bool",
                "vector_i32",
                "vector_struct"
            ]
        }, {
            "id": "Serialized",
            "testcases": [
                "primitive_constants",
                "ops_bool",
                "ops_byte",
                "ops_char",
                "ops_i8",
                "ops_i16",
                "ops_i32",
                "ops_i64",
                "ops_iptr",
                "ops_u8",
                "ops_u16",
                "ops_u32",
                "ops_u64",
                "ops_uptr",
                "ops_float",
                "ops_double",
                "ops_string",
                "ops_entity",
                "ops_struct_bool",
                "ops_struct_bool_bool",
                "ops_struct_i32",
                "ops_struct_i32_i32",
                "ops_struct_i32_bool",
                "ops_struct_bool_i32",
                "ops_nested_struct_1_bool",
                "ops_nested_struct_1_i32",
                "ops_nested_struct_1_bool_w_bool_member",
                "ops_nested_struct_1_bool_w_i32_member",
                "ops_nested_struct_1_bool_2_bool",
                "ops_nested_struct_1_i32_2_bool",
                "ops_nested_struct_1_i32_i32_2_bool_bool",
                "ops_nested_struct_1_bool_bool_2_i32_i32",
                "ops_nested_struct_1_i32_bool_2_bool_i32",
                "ops_nested_struct_1_bool_i32_2_i32_bool",
                "ops_nested_2_lvls_bool",
                "ops_nested_2_lvls_bool_bool",
                "ops_nested_2_lvls_i32_i32_w_member_before",
                "ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before",
                "ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before",
                "ops_struct_array_bool_1",
                "ops_struct_array_bool_2",
                "ops_struct_array_bool_3",
                "ops_struct_array_bool_1_w_i32_after",
                "ops_struct_array_bool_2_w_i32_after",
                "ops_struct_array_bool_3_w_i32_after",
                "ops_struct_array_struct_bool_3_w_i32_after",
                "ops_standalone_array_bool_1",
                "ops_standalone_array_bool_2",
                "ops_standalone_array_bool_3",
                "ops_standalone_array_bool_1_w_bool_after",
                "ops_standalone_array_bool_2_w_bool_after",
                "ops_standalone_array_bool_3_w_bool_after",
                "ops_vector",
                "ops_struct_w_vector",
                "ops_struct_w_vector_w_bool_before",
                "ops_struct_w_vector_w_bool_after",
                "ops_bitmask",
                "ops_struct_w_bitmask",
                "ops_enum",
                "ops_struct_w_enum"
            ]
        }, {
            "id": "Cursor",
            "testcases": [
                "set_bool",
                "set_byte",
                "set_char",
                "set_i8",
                "set_i16",
                "set_i32",
                "set_i64",
                "set_iptr",
                "set_u8",
                "set_u16",
                "set_u32",
                "set_u64",
                "set_uptr",
                "set_float",
                "set_double",
                "set_string",
                "set_string_literal",
                "set_string_to_null",
                "set_entity",
                "set_entity_to_number",
                "set_entity_to_0",
                "set_str_to_bool",
                "set_str_to_char",
                "set_str_literal_to_char",
                "set_str_to_i8",
                "set_str_to_i16",
                "set_str_to_i32",
                "set_str_to_i64",
                "set_str_to_f32",
                "set_str_to_f64",
                "set_str_to_entity",
                "set_str_to_invalid_bool",
                "set_str_to_invalid_entity",
                "struct_set_i32",
                "struct_set_i32_i32",
                "struct_set_i32_i32_i32",
                "struct_set_bool",
                "struct_set_bool_bool",
                "struct_set_bool_bool_bool",
                "struct_set_bool_bool_i32_bool",
                "struct_nested_i32",
                "struct_2_nested_1_i32_2_i32",
                "struct_2_nested_1_i32_i32_2_i32_i32",
                "struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members",
                "struct_set_array_i32_3",
                "struct_set_2_array_i32_3",
                "struct_set_2_array_i32_3_w_padding_members",
                "struct_set_array_w_struct_i32",
                "struct_set_2_array_w_struct_i32",
                "struct_set_array_w_struct_w_array_i32",
                "struct_set_2_array_w_struct_w_array_i32",
                "struct_member_i32",
                "struct_member_i32_i32",
                "struct_member_i32_i32_reverse",
                "struct_member_nested_i32_i32",
                "struct_member_2_nested_i32_i32",
                "struct_member_2_nested_i32_i32_reverse"
            ]
        }, {
            "id": "Expr",
            "testcases": [
                "bool",
                "byte",
                "char",
                "char_literal",
                "i8",
                "i16",
                "i32",
                "i64",
                "iptr",
                "u8",
                "u16",
                "u32",
                "u64",
                "uptr",
                "float",
                "double",
                "negative_int",
                "negative_float",
                "string",
                "struct_i32",
                "struct_i32_i32",
                "struct_entity",
                "struct_nested_i32",
                "struct_nested_i32_i32",
                "struct_2_nested_i32_i32",
                "struct_member_i32",
                "struct_member_i32_i32",
                "struct_member_nested_i32",
                "struct_member_nested_i32_i32",
                "struct_member_2_nested_i32_i32",
                "struct_member_2_nested_i32_i32_reverse"
            ]
        }]
    }
}
