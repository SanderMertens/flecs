{
    "id": "meta",
    "type": "application",
    "value": {
        "author": "Sander Mertens",
        "description": "Test project for flecs.meta",
        "public": false,
        "coverage": false,
        "use": [
            "flecs"
        ]
    },
    "test": {
        "testsuites": [{
            "id": "PrimitiveTypes",
            "testcases": [
                "bool",
                "byte",
                "char",
                "i8",
                "i16",
                "i32",
                "i64",
                "iptr",
                "u8",
                "u16",
                "u32",
                "u64",
                "uptr",
                "float",
                "double",
                "string",
                "entity",
                "builtin_bool",
                "builtin_byte",
                "builtin_char",
                "builtin_i8",
                "builtin_i16",
                "builtin_i32",
                "builtin_i64",
                "builtin_iptr",
                "builtin_u8",
                "builtin_u16",
                "builtin_u32",
                "builtin_u64",
                "builtin_uptr",
                "builtin_float",
                "builtin_double",
                "builtin_string",
                "builtin_entity",
                "struct_w_bool",
                "struct_w_byte",
                "struct_w_char",
                "struct_w_i8",
                "struct_w_i16",
                "struct_w_i32",
                "struct_w_i64",
                "struct_w_iptr",
                "struct_w_u8",
                "struct_w_u16",
                "struct_w_u32",
                "struct_w_u64",
                "struct_w_uptr",
                "struct_w_float",
                "struct_w_double",
                "struct_w_string",
                "struct_w_entity",
                "primitive_init"
            ]
        }, {
            "id": "EnumTypes",
            "testcases": [
                "enum_1_constant",
                "enum_2_constants",
                "enum_3_constants",
                "enum_3_constants_manual_values",
                "struct_w_enum",
                "zero_initialized",
                "enum_relation"
            ]
        }, {
            "id": "BitmaskTypes",
            "testcases": [
                "bitmask_1_constant",
                "bitmask_2_constants",
                "bitmask_3_constants",
                "bitmask_4_constants",
                "bitmask_4_constants_manual_values",
                "struct_w_bitmask"
            ]
        }, {
            "id": "StructTypes",
            "testcases": [
                "i32",
                "i32_i32",
                "i32_i32_i32",
                "bool_i32",
                "bool_bool_i32",
                "bool_i32_bool_i32",
                "i32_bool",
                "i32_bool_bool",
                "i32_bool_bool_bool",
                "i32_i64",
                "i32_i64_i32",
                "incomplete_member"
            ]
        }, {
            "id": "NestedStructTypes",
            "testcases": [
                "1_bool",
                "1_int32",
                "1_bool_w_bool_member",
                "1_bool_w_int32_member",
                "1_int32_w_bool_member",
                "1_int32_w_int32_member",
                "1_bool_2_same",
                "1_bool_2_bool",
                "1_bool_2_i32",
                "1_i32_2_bool",
                "1_bool_2_bool_bool",
                "1_bool_bool_2_bool",
                "1_bool_bool_2_same",
                "1_bool_bool_2_bool_bool",
                "1_i32_2_same",
                "1_i32_2_i32",
                "1_i32_2_i32_i32",
                "1_i32_i32_2_i32",
                "1_i32_i32_2_same",
                "1_i32_i32_2_i32_i32",
                "2_lvls_bool",
                "2_lvls_bool_bool"
            ]
        }, {
            "id": "ArrayTypes",
            "testcases": [
                "array_bool_1",
                "array_bool_2",
                "array_bool_3",
                "array_bool_1_before_i32_member",
                "array_bool_2_before_i32_member",
                "array_bool_3_before_i32_member",
                "array_i32_3",
                "array_i32_3_before_i32_member",
                "array_struct_bool_3",
                "array_struct_bool_3_before_i32_member",
                "array_struct_array_bool_3",
                "2_arrays_1_bool_1_i32",
                "2_arrays_1_i32_1_bool",
                "2_arrays_1_i32_1_bool",
                "8_arrays_bool_w_padded_member",
                "standaline_array_bool_1",
                "standaline_array_bool_2",
                "standaline_array_bool_3",
                "array_of_standaline_array_bool_1",
                "array_of_standaline_array_bool_2",
                "array_of_standaline_array_bool_3"
            ]
        }, {
            "id": "VectorTypes",
            "testcases": [
                "vector_bool",
                "vector_i32",
                "vector_struct"
            ]
        },  {
            "id": "Units",
            "testcases": [
                "member_w_unit",
                "member_w_unit_type",
                "cursor_get_unit",
                "cursor_get_unit_type",
                "unit_w_quantity",
                "unit_w_self_quantity",
                "unit_w_self_quantity_after_init",
                "unit_w_derived",
                "unit_w_over",
                "unit_w_prefix",
                "member_w_invalid_unit",
                "unit_w_invalid_quantity",
                "unit_w_invalid_derived",
                "unit_w_invalid_symbol_w_over",
                "unit_w_invalid_symbol_w_prefix",
                "unit_w_invalid_over",
                "unit_w_over_no_derived",
                "define_twice",
                "define_twice_different_quantity",
                "define_twice_remove_quantity",
                "set_unit",
                "set_unit_w_derived",
                "set_unit_w_over",
                "set_unit_w_prefix",
                "builtin_units"
            ]
        }, {
            "id": "Serialized",
            "testcases": [
                "primitive_constants",
                "ops_bool",
                "ops_byte",
                "ops_char",
                "ops_i8",
                "ops_i16",
                "ops_i32",
                "ops_i64",
                "ops_iptr",
                "ops_u8",
                "ops_u16",
                "ops_u32",
                "ops_u64",
                "ops_uptr",
                "ops_float",
                "ops_double",
                "ops_string",
                "ops_entity",
                "ops_struct_bool",
                "ops_struct_bool_bool",
                "ops_struct_i32",
                "ops_struct_i32_i32",
                "ops_struct_i32_bool",
                "ops_struct_bool_i32",
                "ops_nested_struct_1_bool",
                "ops_nested_struct_1_i32",
                "ops_nested_struct_1_bool_w_bool_member",
                "ops_nested_struct_1_bool_w_i32_member",
                "ops_nested_struct_1_bool_2_bool",
                "ops_nested_struct_1_i32_2_bool",
                "ops_nested_struct_1_i32_i32_2_bool_bool",
                "ops_nested_struct_1_bool_bool_2_i32_i32",
                "ops_nested_struct_1_i32_bool_2_bool_i32",
                "ops_nested_struct_1_bool_i32_2_i32_bool",
                "ops_nested_2_lvls_bool",
                "ops_nested_2_lvls_bool_bool",
                "ops_nested_2_lvls_i32_i32_w_member_before",
                "ops_nested_2_lvls_1_bool_i32_2_i32_bool_w_member_before",
                "ops_nested_2_lvls_1_i32_bool_2_bool_i32_w_member_before",
                "ops_struct_array_bool_1",
                "ops_struct_array_bool_2",
                "ops_struct_array_bool_3",
                "ops_struct_array_bool_1_w_i32_after",
                "ops_struct_array_bool_2_w_i32_after",
                "ops_struct_array_bool_3_w_i32_after",
                "ops_struct_array_struct_bool_3_w_i32_after",
                "ops_standalone_array_bool_1",
                "ops_standalone_array_bool_2",
                "ops_standalone_array_bool_3",
                "ops_standalone_array_bool_1_w_bool_after",
                "ops_standalone_array_bool_2_w_bool_after",
                "ops_standalone_array_bool_3_w_bool_after",
                "ops_vector",
                "ops_struct_w_vector",
                "ops_struct_w_vector_w_bool_before",
                "ops_struct_w_vector_w_bool_after",
                "ops_bitmask",
                "ops_struct_w_bitmask",
                "ops_enum",
                "ops_struct_w_enum"
            ]
        }, {
            "id": "Cursor",
            "testcases": [
                "set_bool",
                "set_byte",
                "set_char",
                "set_i8",
                "set_i16",
                "set_i32",
                "set_i64",
                "set_iptr",
                "set_u8",
                "set_u16",
                "set_u32",
                "set_u64",
                "set_uptr",
                "set_float",
                "set_double",
                "set_string",
                "set_string_literal",
                "set_string_to_null",
                "set_entity",
                "set_entity_to_number",
                "set_entity_to_0",
                "set_str_to_bool",
                "set_str_to_char",
                "set_str_literal_to_char",
                "set_str_to_i8",
                "set_str_to_i16",
                "set_str_to_i32",
                "set_str_to_i64",
                "set_str_to_f32",
                "set_str_to_f64",
                "set_str_to_entity",
                "set_str_to_invalid_bool",
                "set_str_to_invalid_entity",
                "struct_set_i32",
                "struct_set_i32_i32",
                "struct_set_i32_i32_i32",
                "struct_set_bool",
                "struct_set_bool_bool",
                "struct_set_bool_bool_bool",
                "struct_set_bool_bool_i32_bool",
                "struct_nested_i32",
                "struct_2_nested_1_i32_2_i32",
                "struct_2_nested_1_i32_i32_2_i32_i32",
                "struct_2_nested_1_i32_i32_2_i32_i32_w_padding_members",
                "struct_set_array_i32_3",
                "struct_set_2_array_i32_3",
                "struct_set_2_array_i32_3_w_padding_members",
                "struct_set_array_w_struct_i32",
                "struct_set_2_array_w_struct_i32",
                "struct_set_array_w_struct_w_array_i32",
                "struct_set_2_array_w_struct_w_array_i32",
                "struct_member_i32",
                "struct_member_i32_i32",
                "struct_member_i32_i32_reverse",
                "struct_member_nested_i32_i32",
                "struct_member_2_nested_i32_i32",
                "struct_member_2_nested_i32_i32_reverse",
                "struct_w_array_type_i32_i32",
                "struct_w_array_type_struct",
                "struct_w_2_array_type_i32_i32",
                "struct_w_2_array_type_struct"
            ]
        }, {
            "id": "DeserializeFromExpr",
            "testcases": [
                "bool",
                "byte",
                "char",
                "char_literal",
                "i8",
                "i16",
                "i32",
                "i64",
                "iptr",
                "u8",
                "u16",
                "u32",
                "u64",
                "uptr",
                "float",
                "double",
                "negative_int",
                "negative_float",
                "string",
                "entity",
                "enum",
                "bitmask",
                "struct_enum",
                "struct_bitmask",
                "struct_i32",
                "struct_i32_i32",
                "struct_entity",
                "struct_nested_i32",
                "struct_nested_i32_i32",
                "struct_2_nested_i32_i32",
                "struct_member_i32",
                "struct_member_i32_i32",
                "struct_member_nested_i32",
                "struct_member_nested_i32_i32",
                "struct_member_2_nested_i32_i32",
                "struct_member_2_nested_i32_i32_reverse",
                "struct_i32_array_3",
                "struct_struct_i32_array_3",
                "struct_struct_i32_i32_array_3",
                "struct_w_array_type_i32_i32",
                "struct_w_array_type_struct",
                "struct_w_2_array_type_i32_i32",
                "struct_w_2_array_type_struct"
            ]
        }, {
            "id": "SerializeToExpr",
            "testcases": [
                "bool",
                "byte",
                "char",
                "i8",
                "i16",
                "i32",
                "i64",
                "iptr",
                "u8",
                "u16",
                "u32",
                "u64",
                "uptr",
                "float",
                "double",
                "string",
                "entity",
                "enum",
                "bitmask",
                "float_nan",
                "float_inf",
                "double_nan",
                "double_inf",
                "struct_enum",
                "struct_bitmask",
                "struct_i32",
                "struct_i32_i32",
                "struct_entity",
                "entity_entity_after_float",
                "struct_nested_i32",
                "struct_nested_i32_i32",
                "struct_2_nested_i32_i32",
                "struct_struct_i32_array_3",
                "struct_struct_i32_i32_array_3",
                "struct_w_array_type_i32_i32",
                "struct_w_array_type_struct",
                "struct_w_2_array_type_i32_i32",
                "struct_w_2_array_type_struct",
                "escape_simple_string",
                "escape_newline",
                "escape_2_newlines",
                "escape_string_w_trailing_newline",
                "escape_string_w_2_trailing_newlines",
                "escape_string_w_delim"
            ]
        }, {
            "id": "DeserializeFromJson",
            "testcases": [
                "struct_bool",
                "struct_byte",
                "struct_char",
                "struct_char_literal",
                "struct_i8",
                "struct_i16",
                "struct_i32",
                "struct_i64",
                "struct_iptr",
                "struct_u8",
                "struct_u16",
                "struct_u32",
                "struct_u64",
                "struct_uptr",
                "struct_float",
                "struct_double",
                "struct_negative_int",
                "struct_negative_float",
                "struct_string",
                "struct_entity",
                "struct_enum",
                "struct_bitmask",
                "struct_i32_i32",
                "struct_nested_i32",
                "struct_nested_i32_i32",
                "struct_2_nested_i32_i32",
                "struct_i32_array_3",
                "struct_struct_i32_array_3",
                "struct_struct_i32_i32_array_3",
                "struct_w_array_type_i32_i32",
                "struct_w_2_array_type_i32_i32"
            ]
        }, {
            "id": "SerializeToJson",
            "testcases": [
                "struct_bool",
                "struct_byte",
                "struct_char",
                "struct_i8",
                "struct_i16",
                "struct_i32",
                "struct_i64",
                "struct_iptr",
                "struct_u8",
                "struct_u16",
                "struct_u32",
                "struct_u64",
                "struct_uptr",
                "struct_float",
                "struct_double",
                "struct_string",
                "struct_entity",
                "struct_entity_after_float",
                "struct_float_nan",
                "struct_float_inf",
                "struct_double_nan",
                "struct_double_inf",
                "struct_enum",
                "struct_bitmask",
                "struct_i32_i32",
                "struct_nested_i32",
                "struct_nested_i32_i32",
                "struct_2_nested_i32_i32",
                "struct_i32_array_3",
                "struct_struct_i32_array_3",
                "struct_struct_i32_i32_array_3",
                "struct_w_array_type_i32_i32",
                "struct_w_2_array_type_i32_i32",
                "serialize_entity_empty",
                "serialize_entity_w_name",
                "serialize_entity_w_name_1_tag",
                "serialize_entity_w_name_2_tags",
                "serialize_entity_w_name_1_pair",
                "serialize_entity_w_base",
                "serialize_entity_w_base_override",
                "serialize_entity_w_1_component",
                "serialize_entity_w_2_components",
                "serialize_entity_w_primitive_component",
                "serialize_entity_w_enum_component",
                "serialize_entity_w_struct_and_enum_component",
                "serialize_entity_w_invalid_enum_component",
                "serialize_entity_w_type_info",
                "serialize_entity_w_type_info_unit",
                "serialize_entity_w_type_info_unit_quantity",
                "serialize_entity_w_type_info_unit_over",
                "serialize_entity_wo_private",
                "serialize_entity_w_private",
                "serialize_iterator_1_comps_empty",
                "serialize_iterator_1_comps_2_ents_same_table",
                "serialize_iterator_1_tag_2_ents_same_table",
                "serialize_iterator_2_comps_2_ents_same_table",
                "serialize_iterator_1_tag_1_comp_2_ents_same_table",
                "serialize_iterator_1_tag_1_comp_4_ents_two_tables",
                "serialize_iterator_2_comps_1_owned_2_ents",
                "serialize_iterator_w_pair_wildcard",
                "serialize_iterator_w_var",
                "serialize_iterator_w_2_vars",
                "serialize_iterator_type_info_1_tags",
                "serialize_iterator_type_info_2_tags",
                "serialize_iterator_type_info_1_component",
                "serialize_iterator_type_info_2_components",
                "serialize_iterator_type_info_1_struct",
                "serialize_iterator_type_info_1_component_1_struct",
                "serialize_iterator_type_info_2_structs",
                "serialize_iterator_type_info_w_unit",
                "serialize_iterator_type_info_w_unit_quantity",
                "serialize_iterator_type_info_w_unit_over",
                "serialize_iterator_w_entity_label",
                "serialize_iterator_w_var_labels",
                "serialize_iterator_w_var_component",
                "serialize_iterator_w_optional_tag",
                "serialize_iterator_w_optional_component",
                "serialize_iterator_w_optional_reflected_component",
                "serialize_iterator_w_inout_filter_tag",
                "serialize_iterator_w_inout_filter_component",
                "serialize_iterator_w_inout_filter_reflected_component",
                "serialize_iterator_w_inout_out_tag",
                "serialize_iterator_w_inout_out_component",
                "serialize_iterator_w_inout_out_reflected_component"
            ]
        }, {
            "id": "SerializeTypeInfoToJson",
            "testcases": [
                "bool",
                "byte",
                "char",
                "i8",
                "i16",
                "i32",
                "i64",
                "iptr",
                "u8",
                "u16",
                "u32",
                "u64",
                "uptr",
                "float",
                "double",
                "string",
                "entity",
                "enum",
                "bitmask",
                "struct",
                "nested_struct",
                "struct_array_i32_2",
                "struct_array_struct_2",
                "struct_array_type"
            ]
        }, {
            "id": "MetaUtils",
            "testcases": [
                "struct_w_2_i32",
                "struct_w_2_bool",
                "struct_w_2_char",
                "struct_w_2_string",
                "struct_w_2_f32",
                "struct_w_2_f64",
                "struct_w_3_enum",
                "struct_w_3_enum_multiline",
                "struct_w_3_enum_w_assignment",
                "struct_w_4_bitmask",
                "struct_w_3_entities",
                "struct_w_2_array_3_i32",
                "struct_w_nested",
                "enum_nospace",
                "struct_nospace"
            ]
        }]
    }
}
