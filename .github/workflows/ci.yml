name: CI

on: [ push, pull_request ]

jobs:
  build-linux:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}

    strategy:
      fail-fast: false
      matrix:
        compiler:
          - cc: gcc-7
            cxx: g++-7
          - cc: gcc-8
            cxx: g++-8
          - cc: gcc-9
            cxx: g++-9
          - cc: gcc-10
            cxx: g++-10
          - cc: clang-8
            cxx: clang++-8
          - cc: clang-9
            cxx: clang++-9
          - cc: clang-10
            cxx: clang++-10

    steps:
      - uses: actions/checkout@v2
      - name: install compiler
        run: |
          sudo apt-get install -y ${{ matrix.compiler.cc }}
          sudo apt-get install -y ${{ matrix.compiler.cxx }}
      
      - name: install bake
        run: |
          git clone https://github.com/SanderMertens/bake
          make -C bake/build-$(uname)
          bake/bake setup

      - name: build flecs (debug)
        run: |
          bake --strict --cfg debug

      - name: build flecs (release)
        run: |          
          bake --strict --cfg release

      - name: build examples (debug)
        run: |
          bake examples/c --strict --cfg debug
          bake examples/cpp --strict --cfg debug
          bake examples/os_api --strict --cfg debug
          bake examples/os_api/bake --strict --cfg debug

      - name: build examples (release)
        run: |
          bake examples/c --strict --cfg release
          bake examples/cpp --strict --cfg release
          bake examples/os_api --strict --cfg release
          bake examples/os_api/bake --strict --cfg release

  build-windows:
    timeout-minutes: 20
    runs-on: windows-latest

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
      - name: install bake
        run: |
          git clone https://github.com/SanderMertens/bake
          cd bake\build-Windows
          nmake
          cd ..
          ./bake setup --local

      - name: build flecs (debug)
        run: bake/bake --strict --cfg debug
        
      - name: build flecs (release)
        run: bake/bake --strict --cfg release        

      - name: build examples (debug)
        run: |
          bake/bake examples/c --strict --cfg debug
          bake/bake examples/cpp --strict --cfg debug
          bake/bake examples/os_api/stdcpp --strict --cfg debug
          bake/bake examples/os_api/bake --strict --cfg debug

      - name: build examples (release)
        run: |
          bake/bake examples/c --strict --cfg release
          bake/bake examples/cpp --strict --cfg release
          bake/bake examples/os_api/stdcpp --strict --cfg release
          bake/bake examples/os_api/bake --strict --cfg release

  test-unix:
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macOS-latest ]

    steps:
      - uses: actions/checkout@v2
      - name: install bake
        run: |
          git clone https://github.com/SanderMertens/bake
          make -C bake/build-$(uname)
          bake/bake setup

      - name: build flecs
        run: bake --strict

      - name: run tests
        run: |
          bake examples/os_api/bake
          bake test

  test-windows:
    timeout-minutes: 20
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
      - name: install bake
        run: |
          git clone https://github.com/SanderMertens/bake
          cd bake\build-Windows
          nmake
          cd ..
          ./bake setup --local

      - name: build flecs
        run: bake/bake --strict

      - name: run tests
        run: |
          bake/bake examples/os_api/bake
          bake/bake run test\cpp_api
          bake/bake run test\api
          bake/bake run test\collections

  analyze-scan-build:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    env:
      CC: clang-10

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Install clang
        run: |
          sudo apt-get install -y clang-10
          
      - name: install clang-build
        run: |
          sudo apt-get install -y clang-tools   
      
      - name: install bake
        run: |
          git clone https://github.com/SanderMertens/bake
          make -C bake/build-$(uname)
          bake/bake setup

      - name: run scan-build
        run: |
          scan-build --status-bugs bake

  analyze-sanitized:
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macOS-latest ]

    steps:
      - uses: actions/checkout@v2
      - name: install bake
        run: |
          git clone https://github.com/SanderMertens/bake
          make -C bake/build-$(uname)
          bake/bake setup

      - name: build flecs
        run: bake --strict

      - name: run tests
        run: |
          bake examples/os_api/bake
          bake run test/api --cfg sanitize
          bake run test/cpp_api --cfg sanitize
          bake run test/collections --cfg sanitize

  buildsystem-cmake:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: "msvc dev"
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: create build folder
        run: mkdir cmake_build

      - name: build flecs
        working-directory: cmake_build
        run: |
          cmake ..
          cmake --build .

  buildsystem-meson:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: install meson
        run: |
          pip3 install meson
          pip3 install ninja
        
      - name: create build folder
        run: meson meson_build

      - name: build flecs
        working-directory: meson_build
        run: |
          meson compile

  flecs-custom-builds:
    timeout-minutes: 5
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        compiler: [ gcc, clang ]

    steps:
      - uses: actions/checkout@v2
      - name: Install bake
        run: |
          git clone https://github.com/SanderMertens/bake
          make -C bake/build-$(uname)
          bake/bake setup

      - name: no extensions
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD

      - name: FLECS_SYSTEM
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_SYSTEM
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_SYSTEM

      - name: FLECS_PIPELINE
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_PIPELINE
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_PIPELINE

      - name: FLECS_TIMER
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_TIMER
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_TIMER

      - name: FLECS_MODULE
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_MODULE
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_MODULE

      - name: FLECS_SNAPSHOT
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_SNAPSHOT
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_SNAPSHOT

      - name: FLECS_STATS
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_STATS
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_STATS

      - name: FLECS_PARSER
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_PARSER
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_PARSER

      - name: FLECS_PLECS
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_PLECS
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_PLECS

      - name: FLECS_META
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_META
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_META

      - name: FLECS_META_C
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_META_C
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_META_C

      - name: FLECS_EXPR
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_EXPR
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_EXPR

      - name: FLECS_JSON
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_JSON
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_JSON

      - name: FLECS_DOC
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_DOC
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_DOC

      - name: FLECS_COREDOC
        run: |
          bake rebuild --strict -D FLECS_CUSTOM_BUILD -D FLECS_COREDOC
          bake rebuild --strict --cfg release -D FLECS_CUSTOM_BUILD -D FLECS_COREDOC

  flecs-amalgamated:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [ gcc, clang ]

    steps:
      - uses: actions/checkout@v2
      - name: build flecs
        run: ${{ matrix.compiler }} flecs.c --shared -fPIC -pedantic -Wall -Wextra -Wno-unused-parameter -Werror -Wshadow -Wconversion -Wno-missing-field-initializers
