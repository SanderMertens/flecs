name: build

on: [ push, pull_request ]

jobs:
  linux:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}

    strategy:
      fail-fast: false
      matrix:
        config: [debug, release]
        compiler:
          - cc: gcc-7
            cxx: g++-7
          - cc: gcc-8
            cxx: g++-8
          - cc: gcc-9
            cxx: g++-9
          - cc: gcc-10
            cxx: g++-10
          - cc: clang-8
            cxx: clang++-8
          - cc: clang-9
            cxx: clang++-9
          - cc: clang-10
            cxx: clang++-10

    steps:
      - uses: actions/checkout@v2
      - name: install compiler
        run: |
          sudo apt-get install -y ${{ matrix.compiler.cc }}
          sudo apt-get install -y ${{ matrix.compiler.cxx }}
      
      - name: install bake
        run: |
          git clone https://github.com/SanderMertens/bake
          make -C bake/build-$(uname)
          bake/bake setup

      - name: build flecs
        run: |
          bake --strict --cfg ${{ matrix.config }}

      - name: build examples
        run: |
          bake examples/c --strict --cfg ${{ matrix.config }}
          bake examples/cpp --strict --cfg ${{ matrix.config }}
          bake examples/os_api --strict --cfg ${{ matrix.config }}
          bake examples/os_api/bake --strict --cfg ${{ matrix.config }}

  windows:
    timeout-minutes: 10
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        config: [debug, release]

    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
      - name: install bake
        run: |
          git clone https://github.com/SanderMertens/bake
          cd bake\build-Windows
          nmake
          cd ..
          ./bake setup --local

      - name: build flecs
        run: bake/bake --strict --cfg ${{ matrix.config }}
        
      - name: build examples
        run: |
          bake/bake examples/c --strict --cfg ${{ matrix.config }}
          bake/bake examples/cpp --strict --cfg ${{ matrix.config }}
          bake/bake examples/os_api/stdcpp --strict --cfg ${{ matrix.config }}
          bake/bake examples/os_api/bake --strict --cfg ${{ matrix.config }}

  icc:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      CC: icc
      CXX: icc

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: install icc
        run: |
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
          sudo apt-get update
          sudo apt-get install intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
      
      - name: install bake
        run: |
          git clone https://github.com/SanderMertens/bake
          make -C bake/build-$(uname)
          bake/bake setup

      - name: build flecs
        run: |
          source /opt/intel/oneapi/setvars.sh intel64
          bake --strict
          bake --strict --cfg release
